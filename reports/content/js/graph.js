/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 265.0, "minX": 0.0, "maxY": 122230.0, "series": [{"data": [[0.0, 265.0], [0.1, 265.0], [0.2, 266.0], [0.3, 266.0], [0.4, 267.0], [0.5, 267.0], [0.6, 267.0], [0.7, 267.0], [0.8, 267.0], [0.9, 267.0], [1.0, 268.0], [1.1, 268.0], [1.2, 268.0], [1.3, 268.0], [1.4, 269.0], [1.5, 269.0], [1.6, 269.0], [1.7, 269.0], [1.8, 269.0], [1.9, 269.0], [2.0, 269.0], [2.1, 269.0], [2.2, 269.0], [2.3, 269.0], [2.4, 270.0], [2.5, 270.0], [2.6, 270.0], [2.7, 270.0], [2.8, 270.0], [2.9, 270.0], [3.0, 270.0], [3.1, 270.0], [3.2, 270.0], [3.3, 270.0], [3.4, 270.0], [3.5, 270.0], [3.6, 271.0], [3.7, 271.0], [3.8, 271.0], [3.9, 271.0], [4.0, 271.0], [4.1, 271.0], [4.2, 271.0], [4.3, 271.0], [4.4, 271.0], [4.5, 271.0], [4.6, 271.0], [4.7, 271.0], [4.8, 271.0], [4.9, 271.0], [5.0, 272.0], [5.1, 272.0], [5.2, 272.0], [5.3, 272.0], [5.4, 272.0], [5.5, 272.0], [5.6, 272.0], [5.7, 272.0], [5.8, 272.0], [5.9, 272.0], [6.0, 272.0], [6.1, 272.0], [6.2, 272.0], [6.3, 272.0], [6.4, 273.0], [6.5, 273.0], [6.6, 273.0], [6.7, 273.0], [6.8, 273.0], [6.9, 273.0], [7.0, 273.0], [7.1, 273.0], [7.2, 273.0], [7.3, 273.0], [7.4, 273.0], [7.5, 273.0], [7.6, 273.0], [7.7, 273.0], [7.8, 273.0], [7.9, 273.0], [8.0, 273.0], [8.1, 273.0], [8.2, 273.0], [8.3, 273.0], [8.4, 273.0], [8.5, 273.0], [8.6, 273.0], [8.7, 274.0], [8.8, 274.0], [8.9, 274.0], [9.0, 274.0], [9.1, 274.0], [9.2, 274.0], [9.3, 274.0], [9.4, 274.0], [9.5, 274.0], [9.6, 274.0], [9.7, 274.0], [9.8, 274.0], [9.9, 274.0], [10.0, 274.0], [10.1, 274.0], [10.2, 274.0], [10.3, 274.0], [10.4, 274.0], [10.5, 274.0], [10.6, 274.0], [10.7, 274.0], [10.8, 274.0], [10.9, 274.0], [11.0, 274.0], [11.1, 274.0], [11.2, 274.0], [11.3, 274.0], [11.4, 274.0], [11.5, 274.0], [11.6, 274.0], [11.7, 274.0], [11.8, 274.0], [11.9, 274.0], [12.0, 274.0], [12.1, 275.0], [12.2, 275.0], [12.3, 275.0], [12.4, 275.0], [12.5, 275.0], [12.6, 275.0], [12.7, 275.0], [12.8, 275.0], [12.9, 275.0], [13.0, 275.0], [13.1, 275.0], [13.2, 275.0], [13.3, 275.0], [13.4, 275.0], [13.5, 275.0], [13.6, 275.0], [13.7, 276.0], [13.8, 276.0], [13.9, 276.0], [14.0, 276.0], [14.1, 276.0], [14.2, 276.0], [14.3, 276.0], [14.4, 276.0], [14.5, 276.0], [14.6, 276.0], [14.7, 276.0], [14.8, 276.0], [14.9, 276.0], [15.0, 276.0], [15.1, 276.0], [15.2, 276.0], [15.3, 276.0], [15.4, 276.0], [15.5, 276.0], [15.6, 276.0], [15.7, 276.0], [15.8, 276.0], [15.9, 276.0], [16.0, 277.0], [16.1, 277.0], [16.2, 277.0], [16.3, 277.0], [16.4, 277.0], [16.5, 277.0], [16.6, 277.0], [16.7, 277.0], [16.8, 277.0], [16.9, 277.0], [17.0, 277.0], [17.1, 277.0], [17.2, 277.0], [17.3, 277.0], [17.4, 277.0], [17.5, 277.0], [17.6, 277.0], [17.7, 277.0], [17.8, 277.0], [17.9, 277.0], [18.0, 277.0], [18.1, 277.0], [18.2, 278.0], [18.3, 278.0], [18.4, 278.0], [18.5, 278.0], [18.6, 278.0], [18.7, 278.0], [18.8, 278.0], [18.9, 278.0], [19.0, 278.0], [19.1, 278.0], [19.2, 278.0], [19.3, 278.0], [19.4, 278.0], [19.5, 278.0], [19.6, 278.0], [19.7, 278.0], [19.8, 278.0], [19.9, 278.0], [20.0, 279.0], [20.1, 279.0], [20.2, 279.0], [20.3, 279.0], [20.4, 279.0], [20.5, 279.0], [20.6, 279.0], [20.7, 279.0], [20.8, 279.0], [20.9, 279.0], [21.0, 279.0], [21.1, 279.0], [21.2, 279.0], [21.3, 279.0], [21.4, 279.0], [21.5, 279.0], [21.6, 279.0], [21.7, 279.0], [21.8, 279.0], [21.9, 279.0], [22.0, 279.0], [22.1, 279.0], [22.2, 279.0], [22.3, 279.0], [22.4, 280.0], [22.5, 280.0], [22.6, 280.0], [22.7, 280.0], [22.8, 280.0], [22.9, 280.0], [23.0, 280.0], [23.1, 280.0], [23.2, 280.0], [23.3, 280.0], [23.4, 280.0], [23.5, 280.0], [23.6, 281.0], [23.7, 281.0], [23.8, 281.0], [23.9, 281.0], [24.0, 281.0], [24.1, 281.0], [24.2, 281.0], [24.3, 281.0], [24.4, 281.0], [24.5, 281.0], [24.6, 281.0], [24.7, 281.0], [24.8, 281.0], [24.9, 281.0], [25.0, 282.0], [25.1, 282.0], [25.2, 282.0], [25.3, 282.0], [25.4, 282.0], [25.5, 282.0], [25.6, 282.0], [25.7, 282.0], [25.8, 282.0], [25.9, 282.0], [26.0, 282.0], [26.1, 282.0], [26.2, 282.0], [26.3, 282.0], [26.4, 282.0], [26.5, 282.0], [26.6, 282.0], [26.7, 282.0], [26.8, 282.0], [26.9, 282.0], [27.0, 282.0], [27.1, 282.0], [27.2, 283.0], [27.3, 283.0], [27.4, 283.0], [27.5, 283.0], [27.6, 283.0], [27.7, 283.0], [27.8, 283.0], [27.9, 283.0], [28.0, 283.0], [28.1, 283.0], [28.2, 283.0], [28.3, 283.0], [28.4, 283.0], [28.5, 283.0], [28.6, 283.0], [28.7, 283.0], [28.8, 283.0], [28.9, 283.0], [29.0, 283.0], [29.1, 283.0], [29.2, 283.0], [29.3, 283.0], [29.4, 283.0], [29.5, 283.0], [29.6, 283.0], [29.7, 283.0], [29.8, 284.0], [29.9, 284.0], [30.0, 284.0], [30.1, 284.0], [30.2, 284.0], [30.3, 284.0], [30.4, 284.0], [30.5, 284.0], [30.6, 284.0], [30.7, 284.0], [30.8, 284.0], [30.9, 284.0], [31.0, 284.0], [31.1, 284.0], [31.2, 285.0], [31.3, 285.0], [31.4, 285.0], [31.5, 285.0], [31.6, 285.0], [31.7, 285.0], [31.8, 285.0], [31.9, 285.0], [32.0, 285.0], [32.1, 285.0], [32.2, 285.0], [32.3, 285.0], [32.4, 286.0], [32.5, 286.0], [32.6, 286.0], [32.7, 286.0], [32.8, 286.0], [32.9, 286.0], [33.0, 287.0], [33.1, 287.0], [33.2, 287.0], [33.3, 287.0], [33.4, 287.0], [33.5, 287.0], [33.6, 287.0], [33.7, 287.0], [33.8, 287.0], [33.9, 287.0], [34.0, 287.0], [34.1, 287.0], [34.2, 288.0], [34.3, 288.0], [34.4, 288.0], [34.5, 288.0], [34.6, 288.0], [34.7, 288.0], [34.8, 288.0], [34.9, 288.0], [35.0, 288.0], [35.1, 288.0], [35.2, 289.0], [35.3, 289.0], [35.4, 289.0], [35.5, 289.0], [35.6, 289.0], [35.7, 289.0], [35.8, 289.0], [35.9, 289.0], [36.0, 289.0], [36.1, 289.0], [36.2, 289.0], [36.3, 289.0], [36.4, 289.0], [36.5, 289.0], [36.6, 289.0], [36.7, 289.0], [36.8, 289.0], [36.9, 289.0], [37.0, 290.0], [37.1, 290.0], [37.2, 290.0], [37.3, 290.0], [37.4, 290.0], [37.5, 290.0], [37.6, 291.0], [37.7, 291.0], [37.8, 291.0], [37.9, 291.0], [38.0, 292.0], [38.1, 292.0], [38.2, 292.0], [38.3, 292.0], [38.4, 293.0], [38.5, 293.0], [38.6, 293.0], [38.7, 293.0], [38.8, 294.0], [38.9, 294.0], [39.0, 294.0], [39.1, 294.0], [39.2, 295.0], [39.3, 295.0], [39.4, 296.0], [39.5, 296.0], [39.6, 296.0], [39.7, 296.0], [39.8, 297.0], [39.9, 297.0], [40.0, 298.0], [40.1, 298.0], [40.2, 299.0], [40.3, 299.0], [40.4, 299.0], [40.5, 299.0], [40.6, 300.0], [40.7, 300.0], [40.8, 300.0], [40.9, 301.0], [41.0, 301.0], [41.1, 301.0], [41.2, 302.0], [41.3, 302.0], [41.4, 302.0], [41.5, 302.0], [41.6, 303.0], [41.7, 303.0], [41.8, 303.0], [41.9, 303.0], [42.0, 303.0], [42.1, 303.0], [42.2, 304.0], [42.3, 304.0], [42.4, 304.0], [42.5, 304.0], [42.6, 305.0], [42.7, 305.0], [42.8, 305.0], [42.9, 305.0], [43.0, 306.0], [43.1, 306.0], [43.2, 306.0], [43.3, 306.0], [43.4, 307.0], [43.5, 307.0], [43.6, 308.0], [43.7, 308.0], [43.8, 308.0], [43.9, 308.0], [44.0, 308.0], [44.1, 308.0], [44.2, 308.0], [44.3, 308.0], [44.4, 309.0], [44.5, 309.0], [44.6, 309.0], [44.7, 309.0], [44.8, 310.0], [44.9, 310.0], [45.0, 310.0], [45.1, 310.0], [45.2, 311.0], [45.3, 311.0], [45.4, 311.0], [45.5, 311.0], [45.6, 311.0], [45.7, 311.0], [45.8, 312.0], [45.9, 312.0], [46.0, 313.0], [46.1, 313.0], [46.2, 313.0], [46.3, 313.0], [46.4, 313.0], [46.5, 313.0], [46.6, 314.0], [46.7, 314.0], [46.8, 314.0], [46.9, 315.0], [47.0, 315.0], [47.1, 315.0], [47.2, 316.0], [47.3, 316.0], [47.4, 316.0], [47.5, 316.0], [47.6, 317.0], [47.7, 317.0], [47.8, 317.0], [47.9, 318.0], [48.0, 318.0], [48.1, 319.0], [48.2, 319.0], [48.3, 320.0], [48.4, 320.0], [48.5, 320.0], [48.6, 320.0], [48.7, 321.0], [48.8, 321.0], [48.9, 321.0], [49.0, 321.0], [49.1, 322.0], [49.2, 322.0], [49.3, 324.0], [49.4, 324.0], [49.5, 325.0], [49.6, 325.0], [49.7, 325.0], [49.8, 325.0], [49.9, 326.0], [50.0, 326.0], [50.1, 326.0], [50.2, 326.0], [50.3, 326.0], [50.4, 326.0], [50.5, 328.0], [50.6, 328.0], [50.7, 329.0], [50.8, 329.0], [50.9, 330.0], [51.0, 330.0], [51.1, 330.0], [51.2, 330.0], [51.3, 330.0], [51.4, 330.0], [51.5, 331.0], [51.6, 331.0], [51.7, 332.0], [51.8, 332.0], [51.9, 332.0], [52.0, 332.0], [52.1, 332.0], [52.2, 332.0], [52.3, 332.0], [52.4, 332.0], [52.5, 333.0], [52.6, 333.0], [52.7, 334.0], [52.8, 334.0], [52.9, 334.0], [53.0, 334.0], [53.1, 335.0], [53.2, 335.0], [53.3, 335.0], [53.4, 335.0], [53.5, 336.0], [53.6, 336.0], [53.7, 336.0], [53.8, 336.0], [53.9, 337.0], [54.0, 337.0], [54.1, 338.0], [54.2, 338.0], [54.3, 339.0], [54.4, 339.0], [54.5, 341.0], [54.6, 341.0], [54.7, 342.0], [54.8, 342.0], [54.9, 344.0], [55.0, 344.0], [55.1, 345.0], [55.2, 345.0], [55.3, 346.0], [55.4, 346.0], [55.5, 346.0], [55.6, 346.0], [55.7, 347.0], [55.8, 347.0], [55.9, 348.0], [56.0, 348.0], [56.1, 349.0], [56.2, 349.0], [56.3, 350.0], [56.4, 350.0], [56.5, 351.0], [56.6, 351.0], [56.7, 351.0], [56.8, 351.0], [56.9, 353.0], [57.0, 353.0], [57.1, 353.0], [57.2, 353.0], [57.3, 354.0], [57.4, 354.0], [57.5, 354.0], [57.6, 354.0], [57.7, 355.0], [57.8, 355.0], [57.9, 355.0], [58.0, 355.0], [58.1, 355.0], [58.2, 355.0], [58.3, 355.0], [58.4, 355.0], [58.5, 355.0], [58.6, 355.0], [58.7, 355.0], [58.8, 355.0], [58.9, 356.0], [59.0, 356.0], [59.1, 357.0], [59.2, 357.0], [59.3, 357.0], [59.4, 357.0], [59.5, 359.0], [59.6, 359.0], [59.7, 359.0], [59.8, 359.0], [59.9, 359.0], [60.0, 359.0], [60.1, 359.0], [60.2, 359.0], [60.3, 359.0], [60.4, 359.0], [60.5, 359.0], [60.6, 359.0], [60.7, 360.0], [60.8, 360.0], [60.9, 360.0], [61.0, 360.0], [61.1, 360.0], [61.2, 360.0], [61.3, 360.0], [61.4, 360.0], [61.5, 360.0], [61.6, 360.0], [61.7, 360.0], [61.8, 360.0], [61.9, 361.0], [62.0, 361.0], [62.1, 361.0], [62.2, 361.0], [62.3, 361.0], [62.4, 361.0], [62.5, 361.0], [62.6, 361.0], [62.7, 362.0], [62.8, 362.0], [62.9, 362.0], [63.0, 362.0], [63.1, 362.0], [63.2, 362.0], [63.3, 363.0], [63.4, 363.0], [63.5, 363.0], [63.6, 363.0], [63.7, 363.0], [63.8, 363.0], [63.9, 363.0], [64.0, 363.0], [64.1, 364.0], [64.2, 364.0], [64.3, 364.0], [64.4, 364.0], [64.5, 364.0], [64.6, 364.0], [64.7, 364.0], [64.8, 364.0], [64.9, 365.0], [65.0, 365.0], [65.1, 365.0], [65.2, 365.0], [65.3, 365.0], [65.4, 365.0], [65.5, 365.0], [65.6, 365.0], [65.7, 366.0], [65.8, 366.0], [65.9, 366.0], [66.0, 366.0], [66.1, 367.0], [66.2, 367.0], [66.3, 368.0], [66.4, 368.0], [66.5, 368.0], [66.6, 368.0], [66.7, 368.0], [66.8, 368.0], [66.9, 368.0], [67.0, 368.0], [67.1, 368.0], [67.2, 368.0], [67.3, 368.0], [67.4, 368.0], [67.5, 369.0], [67.6, 369.0], [67.7, 369.0], [67.8, 369.0], [67.9, 369.0], [68.0, 369.0], [68.1, 369.0], [68.2, 369.0], [68.3, 369.0], [68.4, 369.0], [68.5, 369.0], [68.6, 369.0], [68.7, 369.0], [68.8, 369.0], [68.9, 369.0], [69.0, 369.0], [69.1, 369.0], [69.2, 369.0], [69.3, 369.0], [69.4, 369.0], [69.5, 370.0], [69.6, 370.0], [69.7, 370.0], [69.8, 370.0], [69.9, 370.0], [70.0, 370.0], [70.1, 370.0], [70.2, 370.0], [70.3, 370.0], [70.4, 370.0], [70.5, 370.0], [70.6, 370.0], [70.7, 370.0], [70.8, 370.0], [70.9, 370.0], [71.0, 370.0], [71.1, 370.0], [71.2, 370.0], [71.3, 370.0], [71.4, 370.0], [71.5, 371.0], [71.6, 371.0], [71.7, 371.0], [71.8, 371.0], [71.9, 371.0], [72.0, 371.0], [72.1, 371.0], [72.2, 371.0], [72.3, 371.0], [72.4, 371.0], [72.5, 371.0], [72.6, 371.0], [72.7, 371.0], [72.8, 371.0], [72.9, 371.0], [73.0, 371.0], [73.1, 371.0], [73.2, 371.0], [73.3, 371.0], [73.4, 371.0], [73.5, 372.0], [73.6, 372.0], [73.7, 372.0], [73.8, 372.0], [73.9, 372.0], [74.0, 372.0], [74.1, 372.0], [74.2, 372.0], [74.3, 372.0], [74.4, 372.0], [74.5, 372.0], [74.6, 372.0], [74.7, 372.0], [74.8, 372.0], [74.9, 372.0], [75.0, 372.0], [75.1, 372.0], [75.2, 372.0], [75.3, 373.0], [75.4, 373.0], [75.5, 373.0], [75.6, 373.0], [75.7, 373.0], [75.8, 373.0], [75.9, 373.0], [76.0, 373.0], [76.1, 373.0], [76.2, 373.0], [76.3, 373.0], [76.4, 373.0], [76.5, 373.0], [76.6, 373.0], [76.7, 374.0], [76.8, 374.0], [76.9, 374.0], [77.0, 374.0], [77.1, 374.0], [77.2, 374.0], [77.3, 374.0], [77.4, 374.0], [77.5, 374.0], [77.6, 374.0], [77.7, 374.0], [77.8, 374.0], [77.9, 374.0], [78.0, 374.0], [78.1, 374.0], [78.2, 374.0], [78.3, 374.0], [78.4, 374.0], [78.5, 375.0], [78.6, 375.0], [78.7, 375.0], [78.8, 375.0], [78.9, 375.0], [79.0, 375.0], [79.1, 375.0], [79.2, 375.0], [79.3, 376.0], [79.4, 376.0], [79.5, 376.0], [79.6, 376.0], [79.7, 376.0], [79.8, 376.0], [79.9, 376.0], [80.0, 376.0], [80.1, 376.0], [80.2, 376.0], [80.3, 376.0], [80.4, 376.0], [80.5, 376.0], [80.6, 376.0], [80.7, 376.0], [80.8, 376.0], [80.9, 377.0], [81.0, 377.0], [81.1, 377.0], [81.2, 377.0], [81.3, 377.0], [81.4, 377.0], [81.5, 377.0], [81.6, 377.0], [81.7, 377.0], [81.8, 377.0], [81.9, 378.0], [82.0, 378.0], [82.1, 378.0], [82.2, 378.0], [82.3, 378.0], [82.4, 378.0], [82.5, 378.0], [82.6, 378.0], [82.7, 378.0], [82.8, 378.0], [82.9, 378.0], [83.0, 378.0], [83.1, 379.0], [83.2, 379.0], [83.3, 379.0], [83.4, 379.0], [83.5, 379.0], [83.6, 379.0], [83.7, 379.0], [83.8, 379.0], [83.9, 379.0], [84.0, 379.0], [84.1, 379.0], [84.2, 379.0], [84.3, 379.0], [84.4, 379.0], [84.5, 380.0], [84.6, 380.0], [84.7, 380.0], [84.8, 380.0], [84.9, 380.0], [85.0, 380.0], [85.1, 380.0], [85.2, 380.0], [85.3, 381.0], [85.4, 381.0], [85.5, 381.0], [85.6, 381.0], [85.7, 381.0], [85.8, 381.0], [85.9, 381.0], [86.0, 381.0], [86.1, 381.0], [86.2, 381.0], [86.3, 382.0], [86.4, 382.0], [86.5, 382.0], [86.6, 382.0], [86.7, 383.0], [86.8, 383.0], [86.9, 383.0], [87.0, 383.0], [87.1, 383.0], [87.2, 383.0], [87.3, 383.0], [87.4, 383.0], [87.5, 384.0], [87.6, 384.0], [87.7, 384.0], [87.8, 384.0], [87.9, 384.0], [88.0, 384.0], [88.1, 384.0], [88.2, 384.0], [88.3, 385.0], [88.4, 385.0], [88.5, 385.0], [88.6, 385.0], [88.7, 386.0], [88.8, 386.0], [88.9, 386.0], [89.0, 386.0], [89.1, 388.0], [89.2, 388.0], [89.3, 389.0], [89.4, 389.0], [89.5, 389.0], [89.6, 389.0], [89.7, 389.0], [89.8, 389.0], [89.9, 389.0], [90.0, 389.0], [90.1, 390.0], [90.2, 390.0], [90.3, 392.0], [90.4, 392.0], [90.5, 392.0], [90.6, 392.0], [90.7, 397.0], [90.8, 397.0], [90.9, 398.0], [91.0, 398.0], [91.1, 402.0], [91.2, 402.0], [91.3, 404.0], [91.4, 404.0], [91.5, 409.0], [91.6, 409.0], [91.7, 411.0], [91.8, 411.0], [91.9, 414.0], [92.0, 414.0], [92.1, 419.0], [92.2, 419.0], [92.3, 423.0], [92.4, 423.0], [92.5, 427.0], [92.6, 427.0], [92.7, 434.0], [92.8, 434.0], [92.9, 449.0], [93.0, 449.0], [93.1, 458.0], [93.2, 458.0], [93.3, 584.0], [93.4, 584.0], [93.5, 608.0], [93.6, 608.0], [93.7, 958.0], [93.8, 958.0], [93.9, 993.0], [94.0, 993.0], [94.1, 996.0], [94.2, 996.0], [94.3, 1033.0], [94.4, 1033.0], [94.5, 1034.0], [94.6, 1034.0], [94.7, 1054.0], [94.8, 1054.0], [94.9, 1065.0], [95.0, 1065.0], [95.1, 1071.0], [95.2, 1071.0], [95.3, 1100.0], [95.4, 1100.0], [95.5, 1103.0], [95.6, 1103.0], [95.7, 1141.0], [95.8, 1141.0], [95.9, 1156.0], [96.0, 1156.0], [96.1, 1158.0], [96.2, 1158.0], [96.3, 1168.0], [96.4, 1168.0], [96.5, 1173.0], [96.6, 1173.0], [96.7, 1183.0], [96.8, 1183.0], [96.9, 1195.0], [97.0, 1195.0], [97.1, 1206.0], [97.2, 1206.0], [97.3, 1258.0], [97.4, 1258.0], [97.5, 1282.0], [97.6, 1282.0], [97.7, 1300.0], [97.8, 1300.0], [97.9, 1355.0], [98.0, 1355.0], [98.1, 1394.0], [98.2, 1394.0], [98.3, 1400.0], [98.4, 1400.0], [98.5, 1695.0], [98.6, 1695.0], [98.7, 1767.0], [98.8, 1767.0], [98.9, 1852.0], [99.0, 1852.0], [99.1, 1923.0], [99.2, 1923.0], [99.3, 1985.0], [99.4, 1985.0], [99.5, 2462.0], [99.6, 2462.0], [99.7, 2667.0], [99.8, 2667.0], [99.9, 12226.0], [100.0, 12226.0]], "isOverall": false, "label": "Calling Code", "isController": false}, {"data": [[0.0, 265.0], [0.1, 265.0], [0.2, 267.0], [0.3, 267.0], [0.4, 267.0], [0.5, 267.0], [0.6, 267.0], [0.7, 268.0], [0.8, 268.0], [0.9, 268.0], [1.0, 268.0], [1.1, 268.0], [1.2, 268.0], [1.3, 270.0], [1.4, 270.0], [1.5, 270.0], [1.6, 271.0], [1.7, 271.0], [1.8, 271.0], [1.9, 271.0], [2.0, 271.0], [2.1, 271.0], [2.2, 271.0], [2.3, 271.0], [2.4, 271.0], [2.5, 271.0], [2.6, 271.0], [2.7, 271.0], [2.8, 272.0], [2.9, 272.0], [3.0, 272.0], [3.1, 272.0], [3.2, 272.0], [3.3, 272.0], [3.4, 272.0], [3.5, 272.0], [3.6, 272.0], [3.7, 272.0], [3.8, 272.0], [3.9, 272.0], [4.0, 272.0], [4.1, 272.0], [4.2, 272.0], [4.3, 272.0], [4.4, 272.0], [4.5, 272.0], [4.6, 273.0], [4.7, 273.0], [4.8, 273.0], [4.9, 273.0], [5.0, 273.0], [5.1, 273.0], [5.2, 273.0], [5.3, 273.0], [5.4, 273.0], [5.5, 273.0], [5.6, 273.0], [5.7, 273.0], [5.8, 273.0], [5.9, 273.0], [6.0, 274.0], [6.1, 274.0], [6.2, 274.0], [6.3, 274.0], [6.4, 274.0], [6.5, 274.0], [6.6, 274.0], [6.7, 274.0], [6.8, 274.0], [6.9, 274.0], [7.0, 274.0], [7.1, 274.0], [7.2, 274.0], [7.3, 274.0], [7.4, 274.0], [7.5, 274.0], [7.6, 275.0], [7.7, 275.0], [7.8, 275.0], [7.9, 275.0], [8.0, 275.0], [8.1, 275.0], [8.2, 275.0], [8.3, 275.0], [8.4, 275.0], [8.5, 275.0], [8.6, 275.0], [8.7, 275.0], [8.8, 275.0], [8.9, 275.0], [9.0, 275.0], [9.1, 275.0], [9.2, 275.0], [9.3, 275.0], [9.4, 275.0], [9.5, 275.0], [9.6, 275.0], [9.7, 275.0], [9.8, 275.0], [9.9, 275.0], [10.0, 276.0], [10.1, 276.0], [10.2, 276.0], [10.3, 276.0], [10.4, 276.0], [10.5, 276.0], [10.6, 276.0], [10.7, 276.0], [10.8, 277.0], [10.9, 277.0], [11.0, 277.0], [11.1, 277.0], [11.2, 277.0], [11.3, 277.0], [11.4, 277.0], [11.5, 277.0], [11.6, 277.0], [11.7, 277.0], [11.8, 277.0], [11.9, 277.0], [12.0, 277.0], [12.1, 277.0], [12.2, 277.0], [12.3, 277.0], [12.4, 277.0], [12.5, 277.0], [12.6, 277.0], [12.7, 278.0], [12.8, 278.0], [12.9, 278.0], [13.0, 278.0], [13.1, 278.0], [13.2, 278.0], [13.3, 278.0], [13.4, 278.0], [13.5, 278.0], [13.6, 278.0], [13.7, 278.0], [13.8, 278.0], [13.9, 278.0], [14.0, 278.0], [14.1, 278.0], [14.2, 278.0], [14.3, 278.0], [14.4, 278.0], [14.5, 278.0], [14.6, 278.0], [14.7, 279.0], [14.8, 279.0], [14.9, 279.0], [15.0, 279.0], [15.1, 279.0], [15.2, 279.0], [15.3, 279.0], [15.4, 279.0], [15.5, 279.0], [15.6, 279.0], [15.7, 280.0], [15.8, 280.0], [15.9, 280.0], [16.0, 280.0], [16.1, 280.0], [16.2, 280.0], [16.3, 280.0], [16.4, 280.0], [16.5, 280.0], [16.6, 280.0], [16.7, 280.0], [16.8, 280.0], [16.9, 280.0], [17.0, 280.0], [17.1, 280.0], [17.2, 280.0], [17.3, 280.0], [17.4, 280.0], [17.5, 280.0], [17.6, 280.0], [17.7, 280.0], [17.8, 280.0], [17.9, 280.0], [18.0, 280.0], [18.1, 280.0], [18.2, 280.0], [18.3, 281.0], [18.4, 281.0], [18.5, 281.0], [18.6, 281.0], [18.7, 281.0], [18.8, 281.0], [18.9, 281.0], [19.0, 281.0], [19.1, 281.0], [19.2, 281.0], [19.3, 281.0], [19.4, 281.0], [19.5, 281.0], [19.6, 281.0], [19.7, 281.0], [19.8, 281.0], [19.9, 281.0], [20.0, 281.0], [20.1, 281.0], [20.2, 281.0], [20.3, 282.0], [20.4, 282.0], [20.5, 282.0], [20.6, 282.0], [20.7, 282.0], [20.8, 282.0], [20.9, 282.0], [21.0, 282.0], [21.1, 282.0], [21.2, 282.0], [21.3, 283.0], [21.4, 283.0], [21.5, 283.0], [21.6, 283.0], [21.7, 283.0], [21.8, 283.0], [21.9, 283.0], [22.0, 283.0], [22.1, 283.0], [22.2, 283.0], [22.3, 283.0], [22.4, 283.0], [22.5, 283.0], [22.6, 283.0], [22.7, 283.0], [22.8, 283.0], [22.9, 283.0], [23.0, 283.0], [23.1, 283.0], [23.2, 283.0], [23.3, 284.0], [23.4, 284.0], [23.5, 284.0], [23.6, 284.0], [23.7, 284.0], [23.8, 284.0], [23.9, 284.0], [24.0, 284.0], [24.1, 284.0], [24.2, 284.0], [24.3, 284.0], [24.4, 284.0], [24.5, 285.0], [24.6, 285.0], [24.7, 285.0], [24.8, 285.0], [24.9, 285.0], [25.0, 285.0], [25.1, 285.0], [25.2, 285.0], [25.3, 285.0], [25.4, 285.0], [25.5, 285.0], [25.6, 285.0], [25.7, 285.0], [25.8, 285.0], [25.9, 285.0], [26.0, 285.0], [26.1, 286.0], [26.2, 286.0], [26.3, 287.0], [26.4, 287.0], [26.5, 287.0], [26.6, 287.0], [26.7, 287.0], [26.8, 287.0], [26.9, 287.0], [27.0, 287.0], [27.1, 287.0], [27.2, 287.0], [27.3, 288.0], [27.4, 288.0], [27.5, 288.0], [27.6, 288.0], [27.7, 288.0], [27.8, 288.0], [27.9, 288.0], [28.0, 288.0], [28.1, 289.0], [28.2, 289.0], [28.3, 289.0], [28.4, 289.0], [28.5, 289.0], [28.6, 289.0], [28.7, 289.0], [28.8, 289.0], [28.9, 289.0], [29.0, 289.0], [29.1, 289.0], [29.2, 289.0], [29.3, 289.0], [29.4, 289.0], [29.5, 290.0], [29.6, 290.0], [29.7, 290.0], [29.8, 290.0], [29.9, 290.0], [30.0, 290.0], [30.1, 291.0], [30.2, 291.0], [30.3, 291.0], [30.4, 291.0], [30.5, 291.0], [30.6, 291.0], [30.7, 291.0], [30.8, 291.0], [30.9, 292.0], [31.0, 292.0], [31.1, 292.0], [31.2, 292.0], [31.3, 293.0], [31.4, 293.0], [31.5, 293.0], [31.6, 293.0], [31.7, 293.0], [31.8, 293.0], [31.9, 293.0], [32.0, 294.0], [32.1, 294.0], [32.2, 294.0], [32.3, 294.0], [32.4, 294.0], [32.5, 294.0], [32.6, 294.0], [32.7, 294.0], [32.8, 295.0], [32.9, 295.0], [33.0, 296.0], [33.1, 296.0], [33.2, 296.0], [33.3, 296.0], [33.4, 296.0], [33.5, 296.0], [33.6, 296.0], [33.7, 296.0], [33.8, 297.0], [33.9, 297.0], [34.0, 297.0], [34.1, 297.0], [34.2, 297.0], [34.3, 297.0], [34.4, 298.0], [34.5, 298.0], [34.6, 299.0], [34.7, 299.0], [34.8, 299.0], [34.9, 299.0], [35.0, 300.0], [35.1, 300.0], [35.2, 300.0], [35.3, 300.0], [35.4, 301.0], [35.5, 301.0], [35.6, 302.0], [35.7, 302.0], [35.8, 302.0], [35.9, 303.0], [36.0, 303.0], [36.1, 303.0], [36.2, 303.0], [36.3, 303.0], [36.4, 303.0], [36.5, 304.0], [36.6, 304.0], [36.7, 304.0], [36.8, 304.0], [36.9, 304.0], [37.0, 304.0], [37.1, 305.0], [37.2, 305.0], [37.3, 306.0], [37.4, 306.0], [37.5, 306.0], [37.6, 306.0], [37.7, 307.0], [37.8, 307.0], [37.9, 308.0], [38.0, 308.0], [38.1, 309.0], [38.2, 309.0], [38.3, 309.0], [38.4, 309.0], [38.5, 310.0], [38.6, 310.0], [38.7, 311.0], [38.8, 311.0], [38.9, 311.0], [39.0, 311.0], [39.1, 312.0], [39.2, 312.0], [39.3, 313.0], [39.4, 313.0], [39.5, 313.0], [39.6, 313.0], [39.7, 313.0], [39.8, 313.0], [39.9, 314.0], [40.0, 314.0], [40.1, 315.0], [40.2, 315.0], [40.3, 315.0], [40.4, 315.0], [40.5, 316.0], [40.6, 316.0], [40.7, 317.0], [40.8, 317.0], [40.9, 318.0], [41.0, 318.0], [41.1, 321.0], [41.2, 321.0], [41.3, 324.0], [41.4, 324.0], [41.5, 325.0], [41.6, 325.0], [41.7, 327.0], [41.8, 327.0], [41.9, 329.0], [42.0, 329.0], [42.1, 329.0], [42.2, 329.0], [42.3, 330.0], [42.4, 330.0], [42.5, 330.0], [42.6, 330.0], [42.7, 331.0], [42.8, 331.0], [42.9, 331.0], [43.0, 331.0], [43.1, 331.0], [43.2, 331.0], [43.3, 331.0], [43.4, 331.0], [43.5, 332.0], [43.6, 332.0], [43.7, 333.0], [43.8, 333.0], [43.9, 334.0], [44.0, 334.0], [44.1, 334.0], [44.2, 334.0], [44.3, 337.0], [44.4, 337.0], [44.5, 337.0], [44.6, 337.0], [44.7, 339.0], [44.8, 339.0], [44.9, 340.0], [45.0, 340.0], [45.1, 340.0], [45.2, 340.0], [45.3, 340.0], [45.4, 340.0], [45.5, 341.0], [45.6, 341.0], [45.7, 341.0], [45.8, 341.0], [45.9, 342.0], [46.0, 342.0], [46.1, 345.0], [46.2, 345.0], [46.3, 345.0], [46.4, 345.0], [46.5, 346.0], [46.6, 346.0], [46.7, 347.0], [46.8, 347.0], [46.9, 348.0], [47.0, 348.0], [47.1, 350.0], [47.2, 350.0], [47.3, 351.0], [47.4, 351.0], [47.5, 351.0], [47.6, 351.0], [47.7, 352.0], [47.8, 352.0], [47.9, 352.0], [48.0, 352.0], [48.1, 352.0], [48.2, 352.0], [48.3, 353.0], [48.4, 353.0], [48.5, 353.0], [48.6, 353.0], [48.7, 353.0], [48.8, 353.0], [48.9, 353.0], [49.0, 353.0], [49.1, 353.0], [49.2, 353.0], [49.3, 353.0], [49.4, 353.0], [49.5, 354.0], [49.6, 354.0], [49.7, 356.0], [49.8, 356.0], [49.9, 356.0], [50.0, 356.0], [50.1, 356.0], [50.2, 356.0], [50.3, 356.0], [50.4, 356.0], [50.5, 357.0], [50.6, 357.0], [50.7, 357.0], [50.8, 357.0], [50.9, 357.0], [51.0, 357.0], [51.1, 357.0], [51.2, 357.0], [51.3, 357.0], [51.4, 357.0], [51.5, 358.0], [51.6, 358.0], [51.7, 358.0], [51.8, 358.0], [51.9, 358.0], [52.0, 358.0], [52.1, 358.0], [52.2, 358.0], [52.3, 358.0], [52.4, 358.0], [52.5, 358.0], [52.6, 358.0], [52.7, 359.0], [52.8, 359.0], [52.9, 359.0], [53.0, 359.0], [53.1, 359.0], [53.2, 359.0], [53.3, 359.0], [53.4, 359.0], [53.5, 359.0], [53.6, 359.0], [53.7, 360.0], [53.8, 360.0], [53.9, 360.0], [54.0, 360.0], [54.1, 360.0], [54.2, 360.0], [54.3, 360.0], [54.4, 360.0], [54.5, 361.0], [54.6, 361.0], [54.7, 361.0], [54.8, 361.0], [54.9, 361.0], [55.0, 361.0], [55.1, 361.0], [55.2, 361.0], [55.3, 361.0], [55.4, 361.0], [55.5, 361.0], [55.6, 361.0], [55.7, 362.0], [55.8, 362.0], [55.9, 362.0], [56.0, 362.0], [56.1, 362.0], [56.2, 362.0], [56.3, 363.0], [56.4, 363.0], [56.5, 363.0], [56.6, 363.0], [56.7, 363.0], [56.8, 363.0], [56.9, 363.0], [57.0, 363.0], [57.1, 364.0], [57.2, 364.0], [57.3, 364.0], [57.4, 364.0], [57.5, 364.0], [57.6, 364.0], [57.7, 364.0], [57.8, 364.0], [57.9, 364.0], [58.0, 364.0], [58.1, 364.0], [58.2, 364.0], [58.3, 365.0], [58.4, 365.0], [58.5, 365.0], [58.6, 365.0], [58.7, 365.0], [58.8, 365.0], [58.9, 365.0], [59.0, 365.0], [59.1, 366.0], [59.2, 366.0], [59.3, 366.0], [59.4, 366.0], [59.5, 366.0], [59.6, 366.0], [59.7, 366.0], [59.8, 366.0], [59.9, 366.0], [60.0, 366.0], [60.1, 366.0], [60.2, 366.0], [60.3, 366.0], [60.4, 366.0], [60.5, 367.0], [60.6, 367.0], [60.7, 367.0], [60.8, 367.0], [60.9, 367.0], [61.0, 367.0], [61.1, 367.0], [61.2, 367.0], [61.3, 368.0], [61.4, 368.0], [61.5, 368.0], [61.6, 368.0], [61.7, 368.0], [61.8, 368.0], [61.9, 368.0], [62.0, 368.0], [62.1, 368.0], [62.2, 368.0], [62.3, 369.0], [62.4, 369.0], [62.5, 369.0], [62.6, 369.0], [62.7, 369.0], [62.8, 369.0], [62.9, 370.0], [63.0, 370.0], [63.1, 370.0], [63.2, 370.0], [63.3, 370.0], [63.4, 370.0], [63.5, 370.0], [63.6, 370.0], [63.7, 370.0], [63.8, 370.0], [63.9, 370.0], [64.0, 370.0], [64.1, 370.0], [64.2, 370.0], [64.3, 371.0], [64.4, 371.0], [64.5, 371.0], [64.6, 371.0], [64.7, 371.0], [64.8, 371.0], [64.9, 371.0], [65.0, 371.0], [65.1, 371.0], [65.2, 371.0], [65.3, 371.0], [65.4, 371.0], [65.5, 372.0], [65.6, 372.0], [65.7, 372.0], [65.8, 372.0], [65.9, 372.0], [66.0, 372.0], [66.1, 372.0], [66.2, 372.0], [66.3, 372.0], [66.4, 372.0], [66.5, 372.0], [66.6, 372.0], [66.7, 372.0], [66.8, 372.0], [66.9, 373.0], [67.0, 373.0], [67.1, 373.0], [67.2, 373.0], [67.3, 373.0], [67.4, 373.0], [67.5, 373.0], [67.6, 373.0], [67.7, 373.0], [67.8, 373.0], [67.9, 373.0], [68.0, 373.0], [68.1, 373.0], [68.2, 373.0], [68.3, 374.0], [68.4, 374.0], [68.5, 374.0], [68.6, 374.0], [68.7, 374.0], [68.8, 374.0], [68.9, 374.0], [69.0, 374.0], [69.1, 374.0], [69.2, 374.0], [69.3, 375.0], [69.4, 375.0], [69.5, 375.0], [69.6, 375.0], [69.7, 375.0], [69.8, 375.0], [69.9, 375.0], [70.0, 375.0], [70.1, 375.0], [70.2, 375.0], [70.3, 375.0], [70.4, 375.0], [70.5, 375.0], [70.6, 375.0], [70.7, 375.0], [70.8, 375.0], [70.9, 375.0], [71.0, 375.0], [71.1, 375.0], [71.2, 375.0], [71.3, 376.0], [71.4, 376.0], [71.5, 376.0], [71.6, 376.0], [71.7, 376.0], [71.8, 376.0], [71.9, 376.0], [72.0, 376.0], [72.1, 376.0], [72.2, 376.0], [72.3, 377.0], [72.4, 377.0], [72.5, 377.0], [72.6, 377.0], [72.7, 377.0], [72.8, 377.0], [72.9, 378.0], [73.0, 378.0], [73.1, 378.0], [73.2, 378.0], [73.3, 378.0], [73.4, 378.0], [73.5, 379.0], [73.6, 379.0], [73.7, 379.0], [73.8, 379.0], [73.9, 379.0], [74.0, 379.0], [74.1, 379.0], [74.2, 379.0], [74.3, 380.0], [74.4, 380.0], [74.5, 380.0], [74.6, 380.0], [74.7, 380.0], [74.8, 380.0], [74.9, 380.0], [75.0, 380.0], [75.1, 380.0], [75.2, 380.0], [75.3, 381.0], [75.4, 381.0], [75.5, 381.0], [75.6, 381.0], [75.7, 381.0], [75.8, 381.0], [75.9, 381.0], [76.0, 381.0], [76.1, 382.0], [76.2, 382.0], [76.3, 382.0], [76.4, 382.0], [76.5, 383.0], [76.6, 383.0], [76.7, 383.0], [76.8, 383.0], [76.9, 383.0], [77.0, 383.0], [77.1, 384.0], [77.2, 384.0], [77.3, 384.0], [77.4, 384.0], [77.5, 384.0], [77.6, 384.0], [77.7, 385.0], [77.8, 385.0], [77.9, 385.0], [78.0, 385.0], [78.1, 385.0], [78.2, 385.0], [78.3, 385.0], [78.4, 385.0], [78.5, 385.0], [78.6, 385.0], [78.7, 386.0], [78.8, 386.0], [78.9, 386.0], [79.0, 386.0], [79.1, 388.0], [79.2, 388.0], [79.3, 389.0], [79.4, 389.0], [79.5, 390.0], [79.6, 390.0], [79.7, 391.0], [79.8, 391.0], [79.9, 391.0], [80.0, 391.0], [80.1, 391.0], [80.2, 391.0], [80.3, 392.0], [80.4, 392.0], [80.5, 394.0], [80.6, 394.0], [80.7, 395.0], [80.8, 395.0], [80.9, 395.0], [81.0, 395.0], [81.1, 397.0], [81.2, 397.0], [81.3, 403.0], [81.4, 403.0], [81.5, 404.0], [81.6, 404.0], [81.7, 405.0], [81.8, 405.0], [81.9, 406.0], [82.0, 406.0], [82.1, 406.0], [82.2, 406.0], [82.3, 414.0], [82.4, 414.0], [82.5, 430.0], [82.6, 430.0], [82.7, 431.0], [82.8, 431.0], [82.9, 438.0], [83.0, 438.0], [83.1, 441.0], [83.2, 441.0], [83.3, 505.0], [83.4, 505.0], [83.5, 567.0], [83.6, 567.0], [83.7, 572.0], [83.8, 572.0], [83.9, 576.0], [84.0, 576.0], [84.1, 609.0], [84.2, 609.0], [84.3, 1020.0], [84.4, 1020.0], [84.5, 1026.0], [84.6, 1026.0], [84.7, 1042.0], [84.8, 1042.0], [84.9, 1044.0], [85.0, 1044.0], [85.1, 1044.0], [85.2, 1044.0], [85.3, 1058.0], [85.4, 1058.0], [85.5, 1065.0], [85.6, 1065.0], [85.7, 1067.0], [85.8, 1067.0], [85.9, 1082.0], [86.0, 1082.0], [86.1, 1084.0], [86.2, 1084.0], [86.3, 1086.0], [86.4, 1086.0], [86.5, 1091.0], [86.6, 1091.0], [86.7, 1091.0], [86.8, 1091.0], [86.9, 1094.0], [87.0, 1094.0], [87.1, 1097.0], [87.2, 1097.0], [87.3, 1098.0], [87.4, 1098.0], [87.5, 1102.0], [87.6, 1102.0], [87.7, 1103.0], [87.8, 1103.0], [87.9, 1103.0], [88.0, 1103.0], [88.1, 1104.0], [88.2, 1104.0], [88.3, 1106.0], [88.4, 1106.0], [88.5, 1106.0], [88.6, 1106.0], [88.7, 1106.0], [88.8, 1106.0], [88.9, 1106.0], [89.0, 1106.0], [89.1, 1107.0], [89.2, 1107.0], [89.3, 1108.0], [89.4, 1108.0], [89.5, 1110.0], [89.6, 1110.0], [89.7, 1112.0], [89.8, 1112.0], [89.9, 1113.0], [90.0, 1113.0], [90.1, 1113.0], [90.2, 1113.0], [90.3, 1116.0], [90.4, 1116.0], [90.5, 1116.0], [90.6, 1116.0], [90.7, 1117.0], [90.8, 1117.0], [90.9, 1121.0], [91.0, 1121.0], [91.1, 1123.0], [91.2, 1123.0], [91.3, 1125.0], [91.4, 1125.0], [91.5, 1127.0], [91.6, 1127.0], [91.7, 1127.0], [91.8, 1127.0], [91.9, 1130.0], [92.0, 1130.0], [92.1, 1130.0], [92.2, 1130.0], [92.3, 1132.0], [92.4, 1132.0], [92.5, 1134.0], [92.6, 1134.0], [92.7, 1137.0], [92.8, 1137.0], [92.9, 1140.0], [93.0, 1140.0], [93.1, 1142.0], [93.2, 1142.0], [93.3, 1143.0], [93.4, 1143.0], [93.5, 1143.0], [93.6, 1143.0], [93.7, 1144.0], [93.8, 1144.0], [93.9, 1148.0], [94.0, 1148.0], [94.1, 1149.0], [94.2, 1149.0], [94.3, 1149.0], [94.4, 1149.0], [94.5, 1154.0], [94.6, 1154.0], [94.7, 1158.0], [94.8, 1158.0], [94.9, 1163.0], [95.0, 1163.0], [95.1, 1168.0], [95.2, 1168.0], [95.3, 1170.0], [95.4, 1170.0], [95.5, 1195.0], [95.6, 1195.0], [95.7, 1220.0], [95.8, 1220.0], [95.9, 1230.0], [96.0, 1230.0], [96.1, 1240.0], [96.2, 1240.0], [96.3, 1279.0], [96.4, 1279.0], [96.5, 1289.0], [96.6, 1289.0], [96.7, 1302.0], [96.8, 1302.0], [96.9, 1315.0], [97.0, 1315.0], [97.1, 1375.0], [97.2, 1375.0], [97.3, 1490.0], [97.4, 1490.0], [97.5, 1623.0], [97.6, 1623.0], [97.7, 1631.0], [97.8, 1631.0], [97.9, 1645.0], [98.0, 1645.0], [98.1, 1651.0], [98.2, 1651.0], [98.3, 1895.0], [98.4, 1895.0], [98.5, 2023.0], [98.6, 2023.0], [98.7, 2388.0], [98.8, 2388.0], [98.9, 2731.0], [99.0, 2731.0], [99.1, 2974.0], [99.2, 2974.0], [99.3, 3890.0], [99.4, 3890.0], [99.5, 9727.0], [99.6, 9727.0], [99.7, 42268.0], [99.8, 42268.0], [99.9, 46360.0], [100.0, 46360.0]], "isOverall": false, "label": "Currency", "isController": false}, {"data": [[0.0, 8659.0], [0.1, 8659.0], [0.2, 8917.0], [0.3, 8917.0], [0.4, 9265.0], [0.5, 9265.0], [0.6, 9265.0], [0.7, 9392.0], [0.8, 9701.0], [0.9, 9701.0], [1.0, 9837.0], [1.1, 9837.0], [1.2, 9858.0], [1.3, 9858.0], [1.4, 10078.0], [1.5, 10078.0], [1.6, 10570.0], [1.7, 10570.0], [1.8, 10678.0], [1.9, 10678.0], [2.0, 10718.0], [2.1, 10718.0], [2.2, 11281.0], [2.3, 11281.0], [2.4, 11623.0], [2.5, 11623.0], [2.6, 11714.0], [2.7, 11714.0], [2.8, 11714.0], [2.9, 11760.0], [3.0, 11760.0], [3.1, 11814.0], [3.2, 11814.0], [3.3, 11854.0], [3.4, 11854.0], [3.5, 11870.0], [3.6, 11870.0], [3.7, 12083.0], [3.8, 12083.0], [3.9, 12132.0], [4.0, 12132.0], [4.1, 12174.0], [4.2, 12174.0], [4.3, 12300.0], [4.4, 12300.0], [4.5, 12899.0], [4.6, 12899.0], [4.7, 12989.0], [4.8, 12989.0], [4.9, 13046.0], [5.0, 13046.0], [5.1, 13057.0], [5.2, 13057.0], [5.3, 13186.0], [5.4, 13186.0], [5.5, 13198.0], [5.6, 13198.0], [5.7, 13633.0], [5.8, 13633.0], [5.9, 13652.0], [6.0, 13652.0], [6.1, 13751.0], [6.2, 13751.0], [6.3, 13844.0], [6.4, 13844.0], [6.5, 13878.0], [6.6, 13878.0], [6.7, 13891.0], [6.8, 13891.0], [6.9, 13906.0], [7.0, 13906.0], [7.1, 13943.0], [7.2, 13943.0], [7.3, 14024.0], [7.4, 14024.0], [7.5, 14255.0], [7.6, 14255.0], [7.7, 14388.0], [7.8, 14388.0], [7.9, 14444.0], [8.0, 14444.0], [8.1, 14937.0], [8.2, 14937.0], [8.3, 14998.0], [8.4, 14998.0], [8.5, 15029.0], [8.6, 15029.0], [8.7, 15144.0], [8.8, 15271.0], [8.9, 15271.0], [9.0, 15332.0], [9.1, 15332.0], [9.2, 15461.0], [9.3, 15461.0], [9.4, 15494.0], [9.5, 15494.0], [9.6, 15516.0], [9.7, 15516.0], [9.8, 15664.0], [9.9, 15664.0], [10.0, 15721.0], [10.1, 15721.0], [10.2, 15759.0], [10.3, 15759.0], [10.4, 16035.0], [10.5, 16035.0], [10.6, 16042.0], [10.7, 16042.0], [10.8, 16059.0], [10.9, 16059.0], [11.0, 16113.0], [11.1, 16113.0], [11.2, 16410.0], [11.3, 16410.0], [11.4, 16422.0], [11.5, 16422.0], [11.6, 16428.0], [11.7, 16428.0], [11.8, 16443.0], [11.9, 16443.0], [12.0, 16516.0], [12.1, 16516.0], [12.2, 16583.0], [12.3, 16583.0], [12.4, 16620.0], [12.5, 16620.0], [12.6, 16667.0], [12.7, 16667.0], [12.8, 16675.0], [12.9, 16675.0], [13.0, 16835.0], [13.1, 16835.0], [13.2, 16870.0], [13.3, 16870.0], [13.4, 16876.0], [13.5, 16876.0], [13.6, 16972.0], [13.7, 16972.0], [13.8, 17036.0], [13.9, 17036.0], [14.0, 17158.0], [14.1, 17158.0], [14.2, 17199.0], [14.3, 17199.0], [14.4, 17260.0], [14.5, 17260.0], [14.6, 17285.0], [14.7, 17285.0], [14.8, 17326.0], [14.9, 17326.0], [15.0, 17369.0], [15.1, 17369.0], [15.2, 17427.0], [15.3, 17427.0], [15.4, 17619.0], [15.5, 17619.0], [15.6, 17623.0], [15.7, 17623.0], [15.8, 17725.0], [15.9, 17725.0], [16.0, 17800.0], [16.1, 17800.0], [16.2, 17804.0], [16.3, 17804.0], [16.4, 18091.0], [16.5, 18091.0], [16.6, 18109.0], [16.7, 18109.0], [16.8, 18155.0], [16.9, 18155.0], [17.0, 18213.0], [17.1, 18213.0], [17.2, 18214.0], [17.3, 18214.0], [17.4, 18369.0], [17.5, 18369.0], [17.6, 18416.0], [17.7, 18416.0], [17.8, 18657.0], [17.9, 18657.0], [18.0, 18788.0], [18.1, 18788.0], [18.2, 18969.0], [18.3, 18969.0], [18.4, 19025.0], [18.5, 19025.0], [18.6, 19145.0], [18.7, 19145.0], [18.8, 19304.0], [18.9, 19304.0], [19.0, 19411.0], [19.1, 19411.0], [19.2, 19517.0], [19.3, 19517.0], [19.4, 19607.0], [19.5, 19607.0], [19.6, 19616.0], [19.7, 19616.0], [19.8, 19850.0], [19.9, 19850.0], [20.0, 19918.0], [20.1, 19918.0], [20.2, 19932.0], [20.3, 19932.0], [20.4, 19972.0], [20.5, 19972.0], [20.6, 19973.0], [20.7, 19973.0], [20.8, 20029.0], [20.9, 20029.0], [21.0, 20121.0], [21.1, 20121.0], [21.2, 20182.0], [21.3, 20182.0], [21.4, 20407.0], [21.5, 20407.0], [21.6, 20627.0], [21.7, 20627.0], [21.8, 20782.0], [21.9, 20782.0], [22.0, 20909.0], [22.1, 20909.0], [22.2, 21012.0], [22.3, 21012.0], [22.4, 21021.0], [22.5, 21021.0], [22.6, 21074.0], [22.7, 21074.0], [22.8, 21181.0], [22.9, 21181.0], [23.0, 21194.0], [23.1, 21194.0], [23.2, 21231.0], [23.3, 21231.0], [23.4, 21262.0], [23.5, 21262.0], [23.6, 21397.0], [23.7, 21397.0], [23.8, 21449.0], [23.9, 21449.0], [24.0, 21527.0], [24.1, 21527.0], [24.2, 21636.0], [24.3, 21636.0], [24.4, 21649.0], [24.5, 21649.0], [24.6, 21807.0], [24.7, 21807.0], [24.8, 21875.0], [24.9, 21875.0], [25.0, 21893.0], [25.1, 21893.0], [25.2, 21955.0], [25.3, 21955.0], [25.4, 22165.0], [25.5, 22165.0], [25.6, 22310.0], [25.7, 22310.0], [25.8, 22326.0], [25.9, 22326.0], [26.0, 22380.0], [26.1, 22380.0], [26.2, 22407.0], [26.3, 22407.0], [26.4, 22411.0], [26.5, 22411.0], [26.6, 22593.0], [26.7, 22593.0], [26.8, 22923.0], [26.9, 22923.0], [27.0, 22931.0], [27.1, 22931.0], [27.2, 23029.0], [27.3, 23029.0], [27.4, 23100.0], [27.5, 23100.0], [27.6, 23156.0], [27.7, 23156.0], [27.8, 23182.0], [27.9, 23182.0], [28.0, 23285.0], [28.1, 23285.0], [28.2, 23391.0], [28.3, 23391.0], [28.4, 23409.0], [28.5, 23409.0], [28.6, 23497.0], [28.7, 23497.0], [28.8, 23596.0], [28.9, 23596.0], [29.0, 23616.0], [29.1, 23616.0], [29.2, 23825.0], [29.3, 23825.0], [29.4, 23827.0], [29.5, 23827.0], [29.6, 23838.0], [29.7, 23838.0], [29.8, 23878.0], [29.9, 23878.0], [30.0, 23884.0], [30.1, 23884.0], [30.2, 23984.0], [30.3, 23984.0], [30.4, 24193.0], [30.5, 24193.0], [30.6, 24317.0], [30.7, 24317.0], [30.8, 24337.0], [30.9, 24337.0], [31.0, 24382.0], [31.1, 24382.0], [31.2, 24462.0], [31.3, 24462.0], [31.4, 24491.0], [31.5, 24491.0], [31.6, 24675.0], [31.7, 24675.0], [31.8, 24701.0], [31.9, 24701.0], [32.0, 24864.0], [32.1, 24864.0], [32.2, 24918.0], [32.3, 24918.0], [32.4, 24939.0], [32.5, 24939.0], [32.6, 25125.0], [32.7, 25125.0], [32.8, 25174.0], [32.9, 25174.0], [33.0, 25256.0], [33.1, 25256.0], [33.2, 25348.0], [33.3, 25348.0], [33.4, 25352.0], [33.5, 25352.0], [33.6, 25459.0], [33.7, 25459.0], [33.8, 25485.0], [33.9, 25485.0], [34.0, 25525.0], [34.1, 25525.0], [34.2, 25539.0], [34.3, 25539.0], [34.4, 25553.0], [34.5, 25553.0], [34.6, 25623.0], [34.7, 25623.0], [34.8, 25672.0], [34.9, 25672.0], [35.0, 25702.0], [35.1, 25702.0], [35.2, 25794.0], [35.3, 25794.0], [35.4, 25919.0], [35.5, 25919.0], [35.6, 26008.0], [35.7, 26008.0], [35.8, 26041.0], [35.9, 26041.0], [36.0, 26088.0], [36.1, 26088.0], [36.2, 26216.0], [36.3, 26216.0], [36.4, 26374.0], [36.5, 26374.0], [36.6, 26501.0], [36.7, 26501.0], [36.8, 26526.0], [36.9, 26526.0], [37.0, 26552.0], [37.1, 26552.0], [37.2, 26665.0], [37.3, 26665.0], [37.4, 26701.0], [37.5, 26701.0], [37.6, 26966.0], [37.7, 26966.0], [37.8, 26973.0], [37.9, 26973.0], [38.0, 27221.0], [38.1, 27221.0], [38.2, 27264.0], [38.3, 27264.0], [38.4, 27264.0], [38.5, 27431.0], [38.6, 27431.0], [38.7, 27555.0], [38.8, 27555.0], [38.9, 27626.0], [39.0, 27626.0], [39.1, 27627.0], [39.2, 27627.0], [39.3, 27705.0], [39.4, 27705.0], [39.5, 27854.0], [39.6, 27854.0], [39.7, 27856.0], [39.8, 27856.0], [39.9, 27925.0], [40.0, 27925.0], [40.1, 27927.0], [40.2, 27927.0], [40.3, 27974.0], [40.4, 27974.0], [40.5, 27991.0], [40.6, 27991.0], [40.7, 27992.0], [40.8, 27992.0], [40.9, 27996.0], [41.0, 27996.0], [41.1, 28033.0], [41.2, 28033.0], [41.3, 28036.0], [41.4, 28036.0], [41.5, 28270.0], [41.6, 28270.0], [41.7, 28289.0], [41.8, 28289.0], [41.9, 28355.0], [42.0, 28355.0], [42.1, 28480.0], [42.2, 28480.0], [42.3, 28517.0], [42.4, 28517.0], [42.5, 28758.0], [42.6, 28758.0], [42.7, 28884.0], [42.8, 28884.0], [42.9, 29199.0], [43.0, 29199.0], [43.1, 29294.0], [43.2, 29294.0], [43.3, 29302.0], [43.4, 29302.0], [43.5, 29449.0], [43.6, 29449.0], [43.7, 29478.0], [43.8, 29478.0], [43.9, 29639.0], [44.0, 29639.0], [44.1, 29711.0], [44.2, 29711.0], [44.3, 29889.0], [44.4, 29889.0], [44.5, 29905.0], [44.6, 29905.0], [44.7, 29987.0], [44.8, 29987.0], [44.9, 29989.0], [45.0, 29989.0], [45.1, 29999.0], [45.2, 29999.0], [45.3, 30030.0], [45.4, 30030.0], [45.5, 30208.0], [45.6, 30208.0], [45.7, 30239.0], [45.8, 30239.0], [45.9, 30317.0], [46.0, 30317.0], [46.1, 30371.0], [46.2, 30371.0], [46.3, 30449.0], [46.4, 30449.0], [46.5, 30494.0], [46.6, 30494.0], [46.7, 30531.0], [46.8, 30531.0], [46.9, 30555.0], [47.0, 30555.0], [47.1, 30617.0], [47.2, 30617.0], [47.3, 30688.0], [47.4, 30688.0], [47.5, 30846.0], [47.6, 30846.0], [47.7, 30895.0], [47.8, 30895.0], [47.9, 30933.0], [48.0, 30933.0], [48.1, 30967.0], [48.2, 30967.0], [48.3, 31054.0], [48.4, 31054.0], [48.5, 31094.0], [48.6, 31094.0], [48.7, 31238.0], [48.8, 31238.0], [48.9, 31337.0], [49.0, 31337.0], [49.1, 31571.0], [49.2, 31571.0], [49.3, 31604.0], [49.4, 31604.0], [49.5, 31933.0], [49.6, 31933.0], [49.7, 31945.0], [49.8, 31945.0], [49.9, 31954.0], [50.0, 31954.0], [50.1, 32168.0], [50.2, 32168.0], [50.3, 32196.0], [50.4, 32196.0], [50.5, 32246.0], [50.6, 32246.0], [50.7, 32281.0], [50.8, 32281.0], [50.9, 32553.0], [51.0, 32553.0], [51.1, 32600.0], [51.2, 32600.0], [51.3, 32602.0], [51.4, 32602.0], [51.5, 32894.0], [51.6, 32894.0], [51.7, 32992.0], [51.8, 32992.0], [51.9, 33032.0], [52.0, 33032.0], [52.1, 33141.0], [52.2, 33141.0], [52.3, 33243.0], [52.4, 33243.0], [52.5, 33256.0], [52.6, 33256.0], [52.7, 33409.0], [52.8, 33409.0], [52.9, 33534.0], [53.0, 33534.0], [53.1, 33540.0], [53.2, 33540.0], [53.3, 33602.0], [53.4, 33602.0], [53.5, 33615.0], [53.6, 33615.0], [53.7, 33633.0], [53.8, 33633.0], [53.9, 33683.0], [54.0, 33683.0], [54.1, 33701.0], [54.2, 33701.0], [54.3, 33733.0], [54.4, 33733.0], [54.5, 33772.0], [54.6, 33772.0], [54.7, 33796.0], [54.8, 33796.0], [54.9, 33902.0], [55.0, 33902.0], [55.1, 34034.0], [55.2, 34034.0], [55.3, 34145.0], [55.4, 34145.0], [55.5, 34610.0], [55.6, 34610.0], [55.7, 34698.0], [55.8, 34698.0], [55.9, 34775.0], [56.0, 34775.0], [56.1, 34901.0], [56.2, 34901.0], [56.3, 34956.0], [56.4, 34956.0], [56.5, 34959.0], [56.6, 34959.0], [56.7, 34974.0], [56.8, 34974.0], [56.9, 35018.0], [57.0, 35018.0], [57.1, 35605.0], [57.2, 35605.0], [57.3, 35609.0], [57.4, 35609.0], [57.5, 35625.0], [57.6, 35625.0], [57.7, 35652.0], [57.8, 35652.0], [57.9, 35913.0], [58.0, 35913.0], [58.1, 35937.0], [58.2, 35937.0], [58.3, 35987.0], [58.4, 35987.0], [58.5, 36061.0], [58.6, 36061.0], [58.7, 36104.0], [58.8, 36104.0], [58.9, 36165.0], [59.0, 36165.0], [59.1, 36173.0], [59.2, 36173.0], [59.3, 36457.0], [59.4, 36457.0], [59.5, 36524.0], [59.6, 36524.0], [59.7, 36544.0], [59.8, 36544.0], [59.9, 36546.0], [60.0, 36546.0], [60.1, 36780.0], [60.2, 36780.0], [60.3, 36848.0], [60.4, 36848.0], [60.5, 37336.0], [60.6, 37336.0], [60.7, 37990.0], [60.8, 37990.0], [60.9, 38128.0], [61.0, 38128.0], [61.1, 38275.0], [61.2, 38275.0], [61.3, 38340.0], [61.4, 38340.0], [61.5, 38371.0], [61.6, 38371.0], [61.7, 38405.0], [61.8, 38405.0], [61.9, 38806.0], [62.0, 38806.0], [62.1, 38880.0], [62.2, 38880.0], [62.3, 39356.0], [62.4, 39356.0], [62.5, 39733.0], [62.6, 39733.0], [62.7, 39995.0], [62.8, 39995.0], [62.9, 40034.0], [63.0, 40034.0], [63.1, 40316.0], [63.2, 40316.0], [63.3, 40326.0], [63.4, 40326.0], [63.5, 40395.0], [63.6, 40395.0], [63.7, 40670.0], [63.8, 40670.0], [63.9, 41131.0], [64.0, 41131.0], [64.1, 41193.0], [64.2, 41193.0], [64.3, 41332.0], [64.4, 41332.0], [64.5, 41503.0], [64.6, 41503.0], [64.7, 41712.0], [64.8, 41712.0], [64.9, 42169.0], [65.0, 42169.0], [65.1, 42473.0], [65.2, 42473.0], [65.3, 42663.0], [65.4, 42663.0], [65.5, 42848.0], [65.6, 42848.0], [65.7, 42897.0], [65.8, 42897.0], [65.9, 42955.0], [66.0, 42955.0], [66.1, 42988.0], [66.2, 42988.0], [66.3, 43012.0], [66.4, 43012.0], [66.5, 43269.0], [66.6, 43269.0], [66.7, 43515.0], [66.8, 43515.0], [66.9, 43795.0], [67.0, 43795.0], [67.1, 44007.0], [67.2, 44007.0], [67.3, 44098.0], [67.4, 44098.0], [67.5, 44149.0], [67.6, 44149.0], [67.7, 44219.0], [67.8, 44219.0], [67.9, 44512.0], [68.0, 44512.0], [68.1, 44785.0], [68.2, 44785.0], [68.3, 44841.0], [68.4, 44841.0], [68.5, 44907.0], [68.6, 44907.0], [68.7, 45444.0], [68.8, 45444.0], [68.9, 45536.0], [69.0, 45536.0], [69.1, 45625.0], [69.2, 45625.0], [69.3, 45749.0], [69.4, 45749.0], [69.5, 45900.0], [69.6, 45900.0], [69.7, 46644.0], [69.8, 46644.0], [69.9, 46718.0], [70.0, 46718.0], [70.1, 47246.0], [70.2, 47246.0], [70.3, 47518.0], [70.4, 47518.0], [70.5, 47621.0], [70.6, 47621.0], [70.7, 47828.0], [70.8, 47828.0], [70.9, 47861.0], [71.0, 47861.0], [71.1, 47948.0], [71.2, 47948.0], [71.3, 47977.0], [71.4, 47977.0], [71.5, 48313.0], [71.6, 48313.0], [71.7, 48462.0], [71.8, 48462.0], [71.9, 48576.0], [72.0, 48576.0], [72.1, 48776.0], [72.2, 48776.0], [72.3, 48929.0], [72.4, 48929.0], [72.5, 49072.0], [72.6, 49072.0], [72.7, 49082.0], [72.8, 49082.0], [72.9, 49115.0], [73.0, 49115.0], [73.1, 49418.0], [73.2, 49418.0], [73.3, 49459.0], [73.4, 49459.0], [73.5, 49555.0], [73.6, 49555.0], [73.7, 49745.0], [73.8, 49745.0], [73.9, 49844.0], [74.0, 49844.0], [74.1, 49915.0], [74.2, 49915.0], [74.3, 49924.0], [74.4, 49924.0], [74.5, 50156.0], [74.6, 50156.0], [74.7, 50231.0], [74.8, 50231.0], [74.9, 50242.0], [75.0, 50242.0], [75.1, 50256.0], [75.2, 50256.0], [75.3, 50295.0], [75.4, 50295.0], [75.5, 50368.0], [75.6, 50368.0], [75.7, 50469.0], [75.8, 50469.0], [75.9, 50612.0], [76.0, 50612.0], [76.1, 50951.0], [76.2, 50951.0], [76.3, 50965.0], [76.4, 50965.0], [76.5, 51073.0], [76.6, 51073.0], [76.7, 51108.0], [76.8, 51108.0], [76.9, 51160.0], [77.0, 51160.0], [77.1, 51173.0], [77.2, 51173.0], [77.3, 51268.0], [77.4, 51268.0], [77.5, 51595.0], [77.6, 51595.0], [77.7, 51664.0], [77.8, 51664.0], [77.9, 51665.0], [78.0, 51665.0], [78.1, 52003.0], [78.2, 52003.0], [78.3, 52008.0], [78.4, 52008.0], [78.5, 52029.0], [78.6, 52029.0], [78.7, 52052.0], [78.8, 52052.0], [78.9, 52110.0], [79.0, 52110.0], [79.1, 52194.0], [79.2, 52194.0], [79.3, 52306.0], [79.4, 52306.0], [79.5, 52402.0], [79.6, 52402.0], [79.7, 52420.0], [79.8, 52420.0], [79.9, 52556.0], [80.0, 52556.0], [80.1, 52598.0], [80.2, 52598.0], [80.3, 52695.0], [80.4, 52695.0], [80.5, 52734.0], [80.6, 52734.0], [80.7, 52797.0], [80.8, 52797.0], [80.9, 52859.0], [81.0, 52859.0], [81.1, 52951.0], [81.2, 52951.0], [81.3, 53002.0], [81.4, 53002.0], [81.5, 53076.0], [81.6, 53076.0], [81.7, 53091.0], [81.8, 53091.0], [81.9, 53108.0], [82.0, 53108.0], [82.1, 53166.0], [82.2, 53166.0], [82.3, 53247.0], [82.4, 53247.0], [82.5, 53457.0], [82.6, 53457.0], [82.7, 53486.0], [82.8, 53486.0], [82.9, 53581.0], [83.0, 53581.0], [83.1, 53686.0], [83.2, 53686.0], [83.3, 53692.0], [83.4, 53692.0], [83.5, 54005.0], [83.6, 54005.0], [83.7, 54018.0], [83.8, 54018.0], [83.9, 54042.0], [84.0, 54042.0], [84.1, 54103.0], [84.2, 54103.0], [84.3, 54174.0], [84.4, 54174.0], [84.5, 54208.0], [84.6, 54208.0], [84.7, 54241.0], [84.8, 54241.0], [84.9, 54268.0], [85.0, 54268.0], [85.1, 54433.0], [85.2, 54433.0], [85.3, 54590.0], [85.4, 54590.0], [85.5, 54610.0], [85.6, 54610.0], [85.7, 54639.0], [85.8, 54639.0], [85.9, 54682.0], [86.0, 54682.0], [86.1, 54710.0], [86.2, 54710.0], [86.3, 55439.0], [86.4, 55439.0], [86.5, 55717.0], [86.6, 55717.0], [86.7, 55915.0], [86.8, 55915.0], [86.9, 55959.0], [87.0, 55959.0], [87.1, 56215.0], [87.2, 56215.0], [87.3, 56222.0], [87.4, 56222.0], [87.5, 57152.0], [87.6, 57152.0], [87.7, 57161.0], [87.8, 57161.0], [87.9, 57413.0], [88.0, 57413.0], [88.1, 57430.0], [88.2, 57430.0], [88.3, 57482.0], [88.4, 57482.0], [88.5, 57774.0], [88.6, 57774.0], [88.7, 57818.0], [88.8, 57818.0], [88.9, 58018.0], [89.0, 58018.0], [89.1, 58086.0], [89.2, 58086.0], [89.3, 58097.0], [89.4, 58097.0], [89.5, 58550.0], [89.6, 58550.0], [89.7, 58939.0], [89.8, 58939.0], [89.9, 59093.0], [90.0, 59093.0], [90.1, 59192.0], [90.2, 59192.0], [90.3, 59285.0], [90.4, 59285.0], [90.5, 59307.0], [90.6, 59307.0], [90.7, 59649.0], [90.8, 59649.0], [90.9, 59824.0], [91.0, 59824.0], [91.1, 59950.0], [91.2, 59950.0], [91.3, 60025.0], [91.4, 60025.0], [91.5, 60359.0], [91.6, 60359.0], [91.7, 60588.0], [91.8, 60588.0], [91.9, 60630.0], [92.0, 60630.0], [92.1, 60938.0], [92.2, 60938.0], [92.3, 61334.0], [92.4, 61334.0], [92.5, 61578.0], [92.6, 61578.0], [92.7, 62053.0], [92.8, 62053.0], [92.9, 62182.0], [93.0, 62182.0], [93.1, 62616.0], [93.2, 62616.0], [93.3, 63095.0], [93.4, 63095.0], [93.5, 64292.0], [93.6, 64292.0], [93.7, 65223.0], [93.8, 65223.0], [93.9, 65690.0], [94.0, 65690.0], [94.1, 68001.0], [94.2, 68001.0], [94.3, 72972.0], [94.4, 72972.0], [94.5, 74738.0], [94.6, 74738.0], [94.7, 75221.0], [94.8, 75221.0], [94.9, 79481.0], [95.0, 79481.0], [95.1, 79947.0], [95.2, 79947.0], [95.3, 82877.0], [95.4, 82877.0], [95.5, 84432.0], [95.6, 84432.0], [95.7, 85245.0], [95.8, 85245.0], [95.9, 93349.0], [96.0, 93349.0], [96.1, 109448.0], [96.2, 109448.0], [96.3, 109483.0], [96.4, 109483.0], [96.5, 109730.0], [96.6, 109730.0], [96.7, 110626.0], [96.8, 110626.0], [96.9, 110640.0], [97.0, 110640.0], [97.1, 111189.0], [97.2, 111189.0], [97.3, 111283.0], [97.4, 111283.0], [97.5, 111291.0], [97.6, 111291.0], [97.7, 113340.0], [97.8, 113340.0], [97.9, 113378.0], [98.0, 113378.0], [98.1, 113407.0], [98.2, 113407.0], [98.3, 113533.0], [98.4, 113533.0], [98.5, 113879.0], [98.6, 113879.0], [98.7, 114236.0], [98.8, 114236.0], [98.9, 115621.0], [99.0, 115621.0], [99.1, 115693.0], [99.2, 115693.0], [99.3, 117716.0], [99.4, 117716.0], [99.5, 120101.0], [99.6, 120101.0], [99.7, 120864.0], [99.8, 120864.0], [99.9, 122230.0], [100.0, 122230.0]], "isOverall": false, "label": "Region", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 252.0, "series": [{"data": [[2400.0, 1.0], [600.0, 1.0], [2600.0, 1.0], [12200.0, 1.0], [200.0, 203.0], [900.0, 3.0], [1000.0, 5.0], [1100.0, 9.0], [300.0, 252.0], [1200.0, 3.0], [1300.0, 3.0], [1400.0, 1.0], [400.0, 11.0], [1600.0, 1.0], [1700.0, 1.0], [1800.0, 1.0], [1900.0, 2.0], [500.0, 1.0]], "isOverall": false, "label": "Calling Code", "isController": false}, {"data": [[2300.0, 1.0], [9700.0, 1.0], [600.0, 1.0], [42200.0, 1.0], [2700.0, 1.0], [2900.0, 1.0], [46300.0, 1.0], [200.0, 175.0], [3800.0, 1.0], [1000.0, 16.0], [1100.0, 41.0], [300.0, 231.0], [1200.0, 5.0], [1300.0, 3.0], [1400.0, 1.0], [400.0, 10.0], [1600.0, 4.0], [1800.0, 1.0], [500.0, 4.0], [2000.0, 1.0]], "isOverall": false, "label": "Currency", "isController": false}, {"data": [[74700.0, 1.0], [33700.0, 4.0], [32900.0, 1.0], [34100.0, 1.0], [34900.0, 4.0], [36100.0, 3.0], [36500.0, 3.0], [37300.0, 1.0], [38100.0, 1.0], [39700.0, 1.0], [39300.0, 1.0], [41700.0, 1.0], [42900.0, 2.0], [41300.0, 1.0], [42100.0, 1.0], [43700.0, 1.0], [44500.0, 1.0], [44900.0, 1.0], [44100.0, 1.0], [45700.0, 1.0], [48500.0, 1.0], [48900.0, 1.0], [49700.0, 1.0], [50900.0, 2.0], [50100.0, 1.0], [52100.0, 2.0], [52500.0, 2.0], [52900.0, 1.0], [54100.0, 2.0], [54500.0, 1.0], [55700.0, 1.0], [59300.0, 1.0], [58900.0, 1.0], [58500.0, 1.0], [57700.0, 1.0], [61300.0, 1.0], [60500.0, 1.0], [60900.0, 1.0], [62100.0, 1.0], [79400.0, 1.0], [110600.0, 2.0], [113800.0, 1.0], [72900.0, 1.0], [109700.0, 1.0], [117700.0, 1.0], [120100.0, 1.0], [8600.0, 1.0], [8900.0, 1.0], [9200.0, 1.0], [9700.0, 1.0], [9300.0, 1.0], [9800.0, 2.0], [10000.0, 1.0], [10500.0, 1.0], [10600.0, 1.0], [10700.0, 1.0], [11200.0, 1.0], [11700.0, 2.0], [11600.0, 1.0], [11800.0, 3.0], [12000.0, 1.0], [12100.0, 2.0], [12300.0, 1.0], [13000.0, 2.0], [12800.0, 1.0], [12900.0, 1.0], [13100.0, 2.0], [13600.0, 2.0], [13700.0, 1.0], [13800.0, 3.0], [13900.0, 2.0], [14000.0, 1.0], [14300.0, 1.0], [14200.0, 1.0], [14400.0, 1.0], [15300.0, 1.0], [15100.0, 1.0], [14900.0, 2.0], [15000.0, 1.0], [15200.0, 1.0], [15600.0, 1.0], [15700.0, 2.0], [15500.0, 1.0], [15400.0, 2.0], [16100.0, 1.0], [16000.0, 3.0], [17200.0, 2.0], [16400.0, 4.0], [16600.0, 3.0], [16800.0, 3.0], [17000.0, 1.0], [17400.0, 1.0], [17800.0, 2.0], [17600.0, 2.0], [18000.0, 1.0], [18200.0, 2.0], [18400.0, 1.0], [19400.0, 1.0], [18600.0, 1.0], [19000.0, 1.0], [20000.0, 1.0], [19600.0, 2.0], [19800.0, 1.0], [20400.0, 1.0], [21400.0, 1.0], [21000.0, 3.0], [20600.0, 1.0], [21200.0, 2.0], [21800.0, 3.0], [22400.0, 2.0], [21600.0, 2.0], [23000.0, 1.0], [23200.0, 1.0], [23400.0, 2.0], [23800.0, 5.0], [24400.0, 2.0], [23600.0, 1.0], [24800.0, 1.0], [24600.0, 1.0], [25400.0, 2.0], [25200.0, 1.0], [26000.0, 3.0], [26200.0, 1.0], [26600.0, 1.0], [25600.0, 2.0], [27600.0, 2.0], [27200.0, 2.0], [27400.0, 1.0], [28000.0, 2.0], [27800.0, 2.0], [28200.0, 2.0], [28400.0, 1.0], [28800.0, 1.0], [29200.0, 1.0], [29400.0, 2.0], [29600.0, 1.0], [30200.0, 2.0], [30400.0, 2.0], [29800.0, 1.0], [30000.0, 1.0], [30600.0, 2.0], [30800.0, 2.0], [31000.0, 2.0], [31600.0, 1.0], [31200.0, 1.0], [32200.0, 2.0], [32600.0, 2.0], [33600.0, 4.0], [33200.0, 2.0], [34000.0, 1.0], [32800.0, 1.0], [35600.0, 4.0], [36400.0, 1.0], [36000.0, 1.0], [36800.0, 1.0], [38800.0, 2.0], [38400.0, 1.0], [40000.0, 1.0], [42800.0, 2.0], [42400.0, 1.0], [44000.0, 2.0], [44800.0, 1.0], [43200.0, 1.0], [45600.0, 1.0], [47600.0, 1.0], [47200.0, 1.0], [48400.0, 1.0], [50400.0, 1.0], [52400.0, 2.0], [51200.0, 1.0], [52000.0, 4.0], [51600.0, 2.0], [52800.0, 1.0], [53200.0, 1.0], [53600.0, 2.0], [54400.0, 1.0], [54000.0, 3.0], [59200.0, 1.0], [58000.0, 3.0], [60000.0, 1.0], [59600.0, 1.0], [62000.0, 1.0], [65200.0, 1.0], [65600.0, 1.0], [68000.0, 1.0], [75200.0, 1.0], [111200.0, 2.0], [120800.0, 1.0], [79900.0, 1.0], [111100.0, 1.0], [113500.0, 1.0], [33100.0, 1.0], [33500.0, 2.0], [34700.0, 1.0], [33900.0, 1.0], [35900.0, 3.0], [36700.0, 1.0], [37900.0, 1.0], [38300.0, 2.0], [40300.0, 3.0], [39900.0, 1.0], [41100.0, 2.0], [41500.0, 1.0], [44700.0, 1.0], [43500.0, 1.0], [45900.0, 1.0], [46700.0, 1.0], [45500.0, 1.0], [47500.0, 1.0], [47900.0, 2.0], [48300.0, 1.0], [48700.0, 1.0], [49100.0, 1.0], [49900.0, 2.0], [51100.0, 3.0], [50300.0, 1.0], [49500.0, 1.0], [52700.0, 2.0], [53100.0, 2.0], [51500.0, 1.0], [52300.0, 1.0], [53500.0, 1.0], [54700.0, 1.0], [55900.0, 2.0], [57100.0, 2.0], [59100.0, 1.0], [59900.0, 1.0], [60300.0, 1.0], [61500.0, 1.0], [109400.0, 2.0], [113400.0, 1.0], [114200.0, 1.0], [122200.0, 1.0], [93300.0, 1.0], [113300.0, 2.0], [16500.0, 2.0], [17100.0, 2.0], [16900.0, 1.0], [17300.0, 2.0], [18100.0, 2.0], [17700.0, 1.0], [18300.0, 1.0], [18700.0, 1.0], [19300.0, 1.0], [19100.0, 1.0], [18900.0, 1.0], [19500.0, 1.0], [19900.0, 4.0], [20100.0, 2.0], [21300.0, 1.0], [20700.0, 1.0], [21100.0, 2.0], [20900.0, 1.0], [21500.0, 1.0], [22300.0, 3.0], [22500.0, 1.0], [22100.0, 1.0], [21900.0, 1.0], [22900.0, 2.0], [23100.0, 3.0], [23500.0, 1.0], [23300.0, 1.0], [24100.0, 1.0], [24300.0, 3.0], [23900.0, 1.0], [25500.0, 3.0], [24900.0, 2.0], [25300.0, 2.0], [24700.0, 1.0], [25100.0, 2.0], [25900.0, 1.0], [26500.0, 3.0], [26300.0, 1.0], [25700.0, 2.0], [26900.0, 2.0], [26700.0, 1.0], [27500.0, 1.0], [27900.0, 6.0], [27700.0, 1.0], [28500.0, 1.0], [28300.0, 1.0], [28700.0, 1.0], [29100.0, 1.0], [29300.0, 1.0], [29900.0, 4.0], [29700.0, 1.0], [30500.0, 2.0], [30300.0, 2.0], [30900.0, 2.0], [31300.0, 1.0], [31500.0, 1.0], [31900.0, 3.0], [32100.0, 2.0], [32500.0, 1.0], [34600.0, 2.0], [33000.0, 1.0], [33400.0, 1.0], [35000.0, 1.0], [38200.0, 1.0], [40600.0, 1.0], [42600.0, 1.0], [43000.0, 1.0], [44200.0, 1.0], [46600.0, 1.0], [45400.0, 1.0], [47800.0, 2.0], [49000.0, 2.0], [49800.0, 1.0], [50200.0, 4.0], [51000.0, 1.0], [49400.0, 2.0], [50600.0, 1.0], [53000.0, 3.0], [52600.0, 1.0], [54600.0, 3.0], [54200.0, 3.0], [53400.0, 2.0], [55400.0, 1.0], [56200.0, 2.0], [57400.0, 3.0], [57800.0, 1.0], [59000.0, 1.0], [60600.0, 1.0], [59800.0, 1.0], [62600.0, 1.0], [63000.0, 1.0], [64200.0, 1.0], [82800.0, 1.0], [85200.0, 1.0], [84400.0, 1.0], [115600.0, 2.0]], "isOverall": false, "label": "Region", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 122200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 97.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 882.0, "series": [{"data": [[0.0, 882.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 97.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 521.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 17.489583333333336, "minX": 1.61617644E12, "maxY": 271.11111111111165, "series": [{"data": [[1.61617644E12, 271.11111111111165], [1.6161765E12, 17.489583333333336]], "isOverall": false, "label": "Number of Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6161765E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.0, "maxY": 122230.0, "series": [{"data": [[2.0, 284.0], [3.0, 276.0], [4.0, 289.0], [5.0, 280.0], [6.0, 272.0], [7.0, 282.0], [8.0, 298.0], [9.0, 278.0], [10.0, 267.0], [11.0, 274.0], [12.0, 336.0], [13.0, 304.0], [14.0, 283.0], [15.0, 273.0], [16.0, 289.0], [17.0, 274.0], [18.0, 287.0], [19.0, 269.0], [20.0, 268.0], [21.0, 1141.0], [22.0, 279.0], [23.0, 1158.0], [24.0, 282.0], [25.0, 289.0], [26.0, 282.0], [27.0, 283.0], [28.0, 278.0], [29.0, 276.0], [30.0, 274.0], [31.0, 283.0], [33.0, 313.0], [32.0, 279.0], [35.0, 279.0], [34.0, 280.0], [37.0, 275.0], [36.0, 270.0], [39.0, 279.0], [38.0, 283.0], [41.0, 280.0], [40.0, 267.0], [43.0, 288.0], [42.0, 289.0], [45.0, 277.0], [44.0, 1100.0], [47.0, 271.0], [46.0, 325.0], [49.0, 278.0], [48.0, 275.0], [51.0, 1103.0], [50.0, 270.0], [53.0, 285.0], [52.0, 292.0], [55.0, 277.0], [54.0, 274.0], [57.0, 278.0], [56.0, 273.0], [59.0, 276.0], [58.0, 279.0], [61.0, 270.0], [60.0, 273.0], [63.0, 276.0], [62.0, 272.0], [67.0, 274.0], [66.0, 276.0], [65.0, 275.0], [64.0, 282.0], [71.0, 271.0], [70.0, 277.0], [69.0, 285.0], [68.0, 274.0], [75.0, 285.0], [74.0, 281.0], [73.0, 289.0], [72.0, 269.0], [79.0, 303.0], [78.0, 283.0], [77.0, 279.0], [76.0, 282.0], [83.0, 277.0], [82.0, 279.0], [81.0, 305.0], [80.0, 301.0], [87.0, 270.0], [86.0, 277.0], [85.0, 287.0], [84.0, 273.0], [91.0, 272.0], [90.0, 275.0], [89.0, 276.0], [88.0, 287.0], [95.0, 281.0], [94.0, 283.0], [93.0, 288.0], [92.0, 266.0], [99.0, 277.0], [98.0, 280.0], [97.0, 281.0], [96.0, 282.0], [103.0, 274.0], [102.0, 303.0], [101.0, 278.0], [100.0, 318.0], [107.0, 330.0], [106.0, 283.0], [105.0, 321.0], [104.0, 274.0], [111.0, 325.0], [109.0, 292.0], [108.0, 307.0], [114.0, 302.0], [113.0, 303.0], [112.0, 311.0], [117.0, 330.0], [116.0, 290.5], [122.0, 311.0], [120.0, 316.3333333333333], [127.0, 608.0], [126.0, 310.0], [125.0, 330.5], [135.0, 310.0], [133.0, 313.0], [131.0, 294.0], [130.0, 310.0], [129.0, 332.0], [143.0, 271.0], [142.0, 269.0], [141.0, 277.0], [140.0, 584.0], [139.0, 371.0], [138.0, 339.0], [137.0, 269.0], [136.0, 278.0], [151.0, 285.0], [150.0, 346.0], [149.0, 351.0], [148.0, 362.0], [147.0, 274.0], [146.0, 274.0], [145.0, 286.0], [144.0, 265.0], [159.0, 282.0], [158.0, 293.0], [157.0, 1034.0], [156.0, 270.0], [155.0, 273.0], [154.0, 282.0], [153.0, 280.0], [152.0, 274.0], [167.0, 275.0], [166.0, 286.0], [165.0, 277.0], [164.0, 274.0], [163.0, 273.0], [162.0, 274.0], [161.0, 275.0], [160.0, 293.0], [175.0, 276.0], [174.0, 275.0], [173.0, 363.0], [172.0, 338.0], [171.0, 290.0], [170.0, 281.0], [169.0, 272.0], [168.0, 281.0], [183.0, 291.0], [182.0, 267.0], [181.0, 274.0], [180.0, 279.0], [179.0, 279.0], [178.0, 284.0], [177.0, 283.0], [176.0, 276.0], [191.0, 271.0], [190.0, 284.0], [189.0, 283.0], [188.0, 280.0], [187.0, 272.0], [186.0, 289.0], [185.0, 279.0], [184.0, 282.0], [199.0, 270.0], [198.0, 283.0], [197.0, 287.0], [196.0, 271.0], [195.0, 271.0], [194.0, 290.0], [193.0, 286.0], [192.0, 284.0], [207.0, 271.0], [206.0, 276.0], [205.0, 274.0], [204.0, 273.0], [203.0, 272.0], [202.0, 299.0], [201.0, 284.0], [200.0, 277.0], [215.0, 282.0], [214.0, 276.0], [213.0, 289.0], [212.0, 288.0], [211.0, 279.0], [210.0, 283.0], [209.0, 287.0], [208.0, 389.0], [223.0, 273.0], [222.0, 315.0], [221.0, 275.0], [220.0, 279.0], [219.0, 277.0], [218.0, 297.0], [217.0, 277.0], [216.0, 296.0], [231.0, 268.0], [230.0, 308.0], [229.0, 273.0], [228.0, 288.0], [227.0, 288.0], [226.0, 284.0], [225.0, 283.0], [224.0, 274.0], [239.0, 299.0], [238.0, 289.0], [237.0, 287.0], [236.0, 278.0], [235.0, 269.0], [234.0, 274.0], [233.0, 276.0], [232.0, 278.0], [247.0, 295.0], [246.0, 308.0], [245.0, 283.0], [244.0, 12226.0], [243.0, 278.0], [242.0, 306.0], [241.0, 296.0], [240.0, 281.0], [255.0, 304.0], [254.0, 294.0], [253.0, 285.0], [252.0, 273.0], [251.0, 273.0], [250.0, 276.0], [249.0, 272.0], [248.0, 289.0], [270.0, 337.0], [271.0, 305.0], [269.0, 325.0], [268.0, 334.0], [267.0, 333.0], [266.0, 324.0], [265.0, 342.0], [264.0, 2667.0], [263.0, 320.0], [257.0, 321.0], [256.0, 308.0], [259.0, 308.0], [258.0, 314.0], [262.0, 306.0], [261.0, 312.0], [260.0, 326.0], [286.0, 374.0], [287.0, 368.0], [285.0, 1355.0], [284.0, 326.0], [283.0, 1065.0], [282.0, 336.0], [281.0, 332.0], [280.0, 335.0], [279.0, 302.0], [273.0, 284.0], [272.0, 281.0], [275.0, 316.0], [274.0, 315.0], [278.0, 300.0], [277.0, 285.0], [276.0, 309.0], [302.0, 374.0], [303.0, 375.0], [301.0, 366.0], [300.0, 375.0], [299.0, 380.0], [298.0, 372.0], [297.0, 375.0], [296.0, 373.0], [295.0, 372.0], [289.0, 360.0], [288.0, 376.0], [291.0, 345.0], [290.0, 354.0], [294.0, 371.0], [293.0, 369.0], [292.0, 341.0], [318.0, 372.0], [319.0, 381.0], [317.0, 371.0], [316.0, 381.0], [315.0, 1300.0], [314.0, 372.0], [313.0, 361.0], [312.0, 372.0], [311.0, 359.0], [305.0, 368.0], [304.0, 357.0], [307.0, 348.0], [306.0, 993.0], [310.0, 369.0], [309.0, 349.0], [308.0, 359.0], [334.0, 370.0], [335.0, 383.0], [333.0, 374.0], [332.0, 378.0], [331.0, 1923.0], [330.0, 371.0], [329.0, 355.0], [328.0, 363.0], [327.0, 379.0], [321.0, 365.0], [320.0, 370.0], [323.0, 378.0], [322.0, 375.0], [326.0, 372.0], [325.0, 377.0], [324.0, 368.0], [350.0, 384.0], [351.0, 368.0], [349.0, 1071.0], [348.0, 996.0], [347.0, 363.0], [346.0, 377.0], [345.0, 1168.0], [344.0, 370.0], [343.0, 385.0], [337.0, 1183.0], [336.0, 384.0], [339.0, 1695.0], [338.0, 359.0], [342.0, 365.0], [341.0, 385.0], [340.0, 364.0], [366.0, 376.0], [367.0, 386.0], [365.0, 378.0], [364.0, 379.0], [363.0, 379.0], [362.0, 353.0], [361.0, 347.0], [360.0, 1282.0], [359.0, 368.0], [353.0, 374.0], [352.0, 369.0], [355.0, 360.0], [354.0, 366.0], [358.0, 1195.0], [357.0, 379.0], [356.0, 1400.0], [382.0, 409.0], [383.0, 381.0], [381.0, 419.0], [380.0, 359.0], [379.0, 359.0], [378.0, 360.0], [377.0, 361.0], [376.0, 380.0], [375.0, 377.0], [369.0, 355.0], [368.0, 344.0], [371.0, 373.0], [370.0, 370.0], [374.0, 350.0], [373.0, 364.0], [372.0, 376.0], [398.0, 364.0], [399.0, 365.0], [397.0, 397.0], [396.0, 373.0], [395.0, 373.0], [394.0, 363.0], [393.0, 355.0], [392.0, 360.0], [391.0, 354.0], [385.0, 383.0], [384.0, 374.0], [387.0, 364.0], [386.0, 356.0], [390.0, 382.0], [389.0, 371.0], [388.0, 370.0], [414.0, 334.0], [415.0, 346.0], [413.0, 376.0], [412.0, 388.0], [411.0, 371.0], [410.0, 361.0], [409.0, 373.0], [408.0, 373.0], [407.0, 370.0], [401.0, 378.0], [400.0, 371.0], [403.0, 372.0], [402.0, 369.0], [406.0, 423.0], [405.0, 374.0], [404.0, 386.0], [430.0, 1156.0], [431.0, 379.0], [429.0, 365.0], [428.0, 378.0], [427.0, 370.0], [426.0, 377.0], [425.0, 367.0], [424.0, 371.0], [423.0, 351.0], [417.0, 355.0], [416.0, 353.0], [419.0, 383.0], [418.0, 376.0], [422.0, 357.0], [421.0, 360.0], [420.0, 374.0], [446.0, 369.0], [447.0, 392.0], [445.0, 1258.0], [444.0, 369.0], [443.0, 373.0], [442.0, 376.0], [441.0, 1033.0], [440.0, 427.0], [439.0, 2462.0], [433.0, 332.0], [432.0, 320.0], [435.0, 958.0], [434.0, 316.0], [438.0, 458.0], [437.0, 384.0], [436.0, 317.0], [462.0, 370.0], [463.0, 368.0], [461.0, 379.0], [460.0, 381.0], [459.0, 380.0], [458.0, 362.0], [457.0, 1767.0], [456.0, 369.0], [455.0, 361.0], [449.0, 389.0], [448.0, 371.0], [451.0, 362.0], [450.0, 372.0], [454.0, 383.0], [453.0, 370.0], [452.0, 381.0], [478.0, 379.0], [479.0, 374.0], [477.0, 380.0], [476.0, 382.0], [475.0, 1852.0], [474.0, 389.0], [473.0, 434.0], [472.0, 411.0], [471.0, 372.0], [465.0, 374.0], [464.0, 369.0], [467.0, 369.0], [466.0, 1173.0], [470.0, 376.0], [469.0, 414.0], [468.0, 370.0], [494.0, 1054.0], [495.0, 355.0], [493.0, 359.0], [492.0, 1206.0], [491.0, 384.0], [490.0, 369.0], [489.0, 1394.0], [488.0, 360.0], [487.0, 392.0], [481.0, 378.0], [480.0, 390.0], [483.0, 449.0], [482.0, 377.0], [486.0, 402.0], [485.0, 355.0], [484.0, 398.0], [500.0, 371.0], [499.0, 389.0], [498.0, 376.0], [497.0, 404.0], [496.0, 1985.0], [1.0, 282.0]], "isOverall": false, "label": "Calling Code", "isController": false}, {"data": [[250.53000000000011, 413.27]], "isOverall": false, "label": "Calling Code-Aggregated", "isController": false}, {"data": [[2.0, 1230.0], [3.0, 1279.0], [4.0, 1144.0], [5.0, 1104.0], [9.0, 1098.5], [11.0, 1102.5], [14.0, 1153.5], [15.0, 1154.0], [16.0, 1163.0], [18.0, 1140.0], [20.0, 1105.0], [21.0, 46360.0], [22.0, 1113.0], [23.0, 42268.0], [24.0, 1143.0], [26.0, 1165.5], [27.0, 1134.0], [28.0, 1106.0], [29.0, 1130.0], [30.0, 1097.0], [33.0, 1142.0], [32.0, 1129.5], [35.0, 1113.5], [37.0, 1123.0], [36.0, 1112.0], [39.0, 1112.5], [43.0, 1726.0], [45.0, 1116.0], [44.0, 1148.0], [47.0, 559.3333333333333], [51.0, 569.0], [55.0, 276.5], [54.0, 283.5], [57.0, 276.5], [58.0, 283.0], [62.0, 280.0], [67.0, 272.0], [66.0, 276.66666666666663], [65.0, 281.0], [64.0, 275.0], [69.0, 280.5], [75.0, 284.0], [74.0, 273.3333333333333], [78.0, 287.0], [82.0, 280.5], [81.0, 285.5], [87.0, 288.0], [86.0, 277.0], [85.0, 294.0], [84.0, 278.0], [88.0, 268.0], [92.0, 285.0], [99.0, 273.75], [102.0, 286.5714285714286], [107.0, 279.0], [105.0, 287.0], [104.0, 294.5], [111.0, 331.5], [109.0, 293.0], [114.0, 303.0], [117.0, 282.0], [116.0, 320.5], [127.0, 410.0], [126.0, 295.5], [125.0, 288.0], [135.0, 356.33333333333337], [133.0, 315.5], [140.0, 288.5], [139.0, 569.5], [150.0, 283.0], [149.0, 347.0], [147.0, 286.5], [145.0, 272.75], [144.0, 278.0], [159.0, 286.0], [154.0, 287.0], [153.0, 277.0], [166.0, 283.5], [165.0, 282.0], [163.0, 276.5], [160.0, 289.5], [175.0, 287.0], [170.0, 286.5], [183.0, 286.0], [182.0, 276.0], [180.0, 272.0], [179.0, 285.5], [177.0, 279.0], [176.0, 279.25], [188.0, 280.0], [186.0, 288.0], [198.0, 283.0], [196.0, 271.0], [195.0, 280.0], [192.0, 279.25], [207.0, 275.0], [206.0, 276.6666666666667], [205.0, 278.0], [202.0, 281.0], [201.0, 278.0], [200.0, 279.0], [215.0, 281.0], [213.0, 290.0], [212.0, 290.5], [210.0, 277.0], [221.0, 293.2], [219.0, 284.0], [217.0, 282.0], [216.0, 293.0], [227.0, 290.5], [225.0, 270.5], [239.0, 278.5], [237.0, 285.5], [236.0, 287.0], [234.0, 280.0], [247.0, 304.0], [245.0, 301.0], [244.0, 282.5], [242.0, 280.5], [240.0, 272.0], [255.0, 300.0], [253.0, 302.0], [249.0, 273.0], [248.0, 273.5], [271.0, 285.0], [267.0, 338.5], [266.0, 340.0], [265.0, 350.0], [264.0, 599.6], [263.0, 303.0], [261.0, 303.0], [260.0, 323.5], [285.0, 390.0], [284.0, 323.5], [283.0, 331.6666666666667], [279.0, 318.0], [277.0, 297.0], [276.0, 621.5], [274.0, 313.0], [272.0, 283.0], [301.0, 367.0], [302.0, 365.0], [300.0, 368.2], [299.0, 357.0], [297.0, 371.0], [294.0, 553.8], [293.0, 357.0], [292.0, 692.0], [291.0, 345.0], [317.0, 362.0], [316.0, 374.0], [313.0, 355.6666666666667], [310.0, 1067.0], [304.0, 615.6666666666666], [333.0, 376.0], [335.0, 371.0], [332.0, 369.0], [331.0, 352.75], [329.0, 364.0], [326.0, 1240.0], [325.0, 2245.0], [324.0, 383.0], [323.0, 380.5], [320.0, 378.0], [348.0, 363.0], [345.0, 1125.0], [344.0, 366.0], [343.0, 378.75], [341.0, 388.0], [339.0, 375.0], [338.0, 358.0], [336.0, 375.0], [366.0, 365.0], [364.0, 370.0], [363.0, 1058.0], [362.0, 364.5], [361.0, 349.0], [357.0, 616.0], [355.0, 378.5], [352.0, 365.5], [381.0, 368.0], [383.0, 353.0], [380.0, 402.5], [369.0, 346.5], [379.0, 361.0], [377.0, 461.14285714285717], [375.0, 379.0], [374.0, 358.0], [373.0, 375.0], [372.0, 738.0], [394.0, 1020.5], [391.0, 357.0], [390.0, 366.0], [386.0, 363.0], [384.0, 380.75], [413.0, 378.0], [410.0, 370.0], [406.0, 946.5], [404.0, 369.0], [403.0, 1133.0], [402.0, 692.5], [401.0, 2388.0], [419.0, 366.0], [430.0, 368.0], [431.0, 324.5], [429.0, 377.0], [426.0, 368.0], [425.0, 371.0], [423.0, 380.0], [421.0, 361.0], [420.0, 1651.0], [418.0, 606.6666666666666], [417.0, 359.5], [416.0, 358.0], [446.0, 1182.0], [445.0, 361.0], [443.0, 383.0], [442.0, 392.0], [439.0, 1375.0], [438.0, 505.0], [436.0, 873.3333333333333], [451.0, 382.0], [463.0, 771.0], [460.0, 1044.0], [458.0, 357.0], [455.0, 372.8], [454.0, 365.5], [450.0, 368.0], [449.0, 610.3333333333334], [448.0, 372.0], [479.0, 376.0], [476.0, 375.0], [475.0, 369.5], [474.0, 375.0], [473.0, 421.5], [472.0, 441.0], [469.0, 391.0], [468.0, 367.0], [466.0, 1302.0], [464.0, 369.5], [493.0, 373.0], [491.0, 372.0], [489.0, 339.0], [488.0, 378.5], [487.0, 577.75], [482.0, 544.75], [481.0, 378.0], [500.0, 375.0], [499.0, 375.0], [498.0, 391.0], [496.0, 623.0], [1.0, 1106.0]], "isOverall": false, "label": "Currency", "isController": false}, {"data": [[254.6559999999999, 669.5120000000001]], "isOverall": false, "label": "Currency-Aggregated", "isController": false}, {"data": [[3.0, 120482.5], [7.0, 117716.0], [11.0, 114244.14285714286], [16.0, 111984.0], [17.0, 110626.0], [20.0, 110098.0], [23.0, 93349.0], [24.0, 84432.0], [26.0, 82596.0], [28.0, 81179.0], [30.0, 74979.5], [33.0, 65690.0], [32.0, 70486.5], [36.0, 63702.5], [39.0, 64292.0], [45.0, 61841.5], [44.0, 60938.0], [47.0, 62616.0], [46.0, 61693.5], [49.0, 59649.0], [48.0, 59824.0], [51.0, 59972.0], [57.0, 58722.0], [56.0, 59228.0], [59.0, 57818.0], [62.0, 58018.0], [67.0, 57950.5], [66.0, 57264.0], [64.0, 57774.0], [69.0, 59307.0], [74.0, 54174.0], [72.0, 56215.0], [81.0, 54977.0], [87.0, 53014.666666666664], [86.0, 53030.0], [85.0, 53157.5], [84.0, 53457.0], [91.0, 52859.0], [94.0, 52598.0], [92.0, 52402.0], [103.0, 51955.666666666664], [102.0, 54610.0], [107.0, 52084.5], [106.0, 51664.0], [105.0, 53524.42857142857], [104.0, 54241.0], [111.0, 55959.0], [109.0, 53872.5], [117.0, 51440.0], [116.0, 53879.0], [127.0, 50277.0], [125.0, 50156.0], [135.0, 49656.75], [130.0, 50951.0], [143.0, 51160.0], [150.0, 49415.66666666667], [147.0, 48916.25], [145.0, 45444.0], [144.0, 49262.333333333336], [154.0, 44578.75], [167.0, 45900.0], [166.0, 45625.0], [164.0, 43407.0], [163.0, 46718.0], [160.0, 45051.25], [175.0, 39995.0], [174.0, 40395.0], [171.0, 40316.0], [170.0, 41193.0], [169.0, 40670.0], [183.0, 40966.0], [182.0, 44276.333333333336], [179.0, 43714.8], [177.0, 40326.0], [190.0, 38405.0], [188.0, 42663.0], [187.0, 42777.666666666664], [197.0, 34956.0], [195.0, 37022.666666666664], [193.0, 41712.0], [192.0, 39111.666666666664], [207.0, 35146.333333333336], [206.0, 38340.0], [205.0, 36544.0], [202.0, 36780.0], [201.0, 36512.5], [200.0, 39733.0], [213.0, 37990.0], [210.0, 35987.0], [223.0, 33687.5], [222.0, 34959.0], [221.0, 34157.5], [219.0, 34901.0], [218.0, 34610.0], [217.0, 37336.0], [216.0, 33144.0], [230.0, 32168.0], [225.0, 35379.5], [236.0, 35290.0], [233.0, 32196.0], [247.0, 34472.0], [244.0, 35126.5], [243.0, 33683.0], [242.0, 34823.0], [240.0, 31238.0], [254.0, 31054.0], [252.0, 34735.5], [249.0, 31604.0], [248.0, 33633.0], [271.0, 30477.0], [270.0, 34974.0], [267.0, 33317.6], [266.0, 30625.0], [264.0, 33170.0], [263.0, 30371.0], [261.0, 33141.0], [260.0, 33121.0], [259.0, 30531.0], [286.0, 33243.0], [285.0, 32823.0], [284.0, 30383.5], [283.0, 30402.666666666668], [279.0, 29639.0], [277.0, 31094.0], [276.0, 31253.5], [273.0, 30098.5], [300.0, 27627.0], [302.0, 27678.0], [303.0, 27705.5], [301.0, 27930.6], [299.0, 27974.0], [297.0, 28422.0], [295.0, 30895.0], [294.0, 30080.0], [291.0, 31337.0], [290.0, 29294.0], [288.0, 31889.0], [319.0, 27490.5], [318.0, 25623.0], [305.0, 26552.0], [304.0, 27062.0], [335.0, 25386.6], [333.0, 25125.0], [331.0, 26636.0], [329.0, 30113.0], [326.0, 25459.0], [325.0, 26270.666666666668], [324.0, 27114.333333333332], [323.0, 28226.0], [350.0, 23391.0], [346.0, 24337.0], [344.0, 23838.0], [343.0, 25707.0], [342.0, 23825.0], [341.0, 27350.5], [340.0, 23984.0], [338.0, 25553.0], [366.0, 21527.0], [367.0, 26008.0], [365.0, 21807.0], [355.0, 22380.0], [362.0, 24271.0], [361.0, 22165.0], [360.0, 23941.5], [359.0, 21955.0], [358.0, 22411.0], [357.0, 27626.0], [356.0, 23616.0], [383.0, 22077.0], [382.0, 24286.75], [380.0, 22734.0], [377.0, 24230.0], [376.0, 21051.5], [373.0, 24200.5], [372.0, 21012.0], [368.0, 23878.0], [386.0, 22772.5], [399.0, 20070.666666666668], [398.0, 19025.0], [394.0, 22286.6], [392.0, 20182.0], [390.0, 22434.5], [389.0, 24382.0], [388.0, 22593.0], [385.0, 24939.0], [384.0, 22298.0], [413.0, 18416.0], [408.0, 23029.0], [407.0, 23285.0], [406.0, 23497.0], [405.0, 18757.0], [404.0, 21181.0], [430.0, 17272.5], [431.0, 17716.4], [429.0, 18471.0], [426.0, 21397.0], [425.0, 18085.0], [423.0, 19816.0], [422.0, 18091.0], [420.0, 19378.333333333332], [419.0, 17969.0], [417.0, 18214.0], [447.0, 18886.5], [446.0, 19304.0], [443.0, 17245.666666666668], [441.0, 16035.0], [439.0, 20029.0], [436.0, 17877.5], [433.0, 16819.5], [463.0, 15721.0], [460.0, 16042.0], [457.0, 16410.0], [456.0, 16588.0], [455.0, 15038.75], [454.0, 17512.5], [453.0, 15029.0], [451.0, 16542.666666666668], [449.0, 17028.0], [478.0, 12083.0], [479.0, 15222.666666666666], [476.0, 13292.333333333334], [475.0, 13649.333333333334], [474.0, 14103.0], [472.0, 13906.0], [469.0, 16675.0], [468.0, 15144.0], [467.0, 14291.666666666666], [466.0, 14998.0], [465.0, 14024.0], [495.0, 13633.0], [494.0, 13751.0], [491.0, 11714.0], [490.0, 11857.5], [489.0, 11814.25], [484.0, 15332.0], [483.0, 12899.0], [482.0, 12176.75], [500.0, 10289.42857142857], [499.0, 9858.0], [497.0, 10570.0], [496.0, 11862.0], [1.0, 122230.0]], "isOverall": false, "label": "Region", "isController": false}, {"data": [[259.45200000000006, 37552.532]], "isOverall": false, "label": "Region-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 288.6, "minX": 1.61617644E12, "maxY": 314399.01666666666, "series": [{"data": [[1.61617644E12, 314399.01666666666], [1.6161765E12, 20167.65]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.61617644E12, 4219.733333333334], [1.6161765E12, 288.6]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6161765E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 335.8181818181818, "minX": 1.61617644E12, "maxY": 102465.03333333333, "series": [{"data": [[1.61617644E12, 418.7430406852247], [1.6161765E12, 335.8181818181818]], "isOverall": false, "label": "Calling Code", "isController": false}, {"data": [[1.61617644E12, 451.7366167023556], [1.6161765E12, 3751.3636363636365]], "isOverall": false, "label": "Currency", "isController": false}, {"data": [[1.61617644E12, 33409.180851063815], [1.6161765E12, 102465.03333333333]], "isOverall": false, "label": "Region", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6161765E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 335.72727272727275, "minX": 1.61617644E12, "maxY": 86249.83333333336, "series": [{"data": [[1.61617644E12, 418.71092077087786], [1.6161765E12, 335.72727272727275]], "isOverall": false, "label": "Calling Code", "isController": false}, {"data": [[1.61617644E12, 451.7173447537468], [1.6161765E12, 3751.333333333334]], "isOverall": false, "label": "Currency", "isController": false}, {"data": [[1.61617644E12, 26616.306382978706], [1.6161765E12, 86249.83333333336]], "isOverall": false, "label": "Region", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6161765E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 3.5417558886509637, "minX": 1.61617644E12, "maxY": 14958.574468085102, "series": [{"data": [[1.61617644E12, 3.5417558886509637], [1.6161765E12, 52.18181818181817]], "isOverall": false, "label": "Calling Code", "isController": false}, {"data": [[1.61617644E12, 23.453961456102782], [1.6161765E12, 794.5151515151515]], "isOverall": false, "label": "Currency", "isController": false}, {"data": [[1.61617644E12, 14958.574468085102], [1.6161765E12, 4213.700000000001]], "isOverall": false, "label": "Region", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6161765E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.61617644E12, "maxY": 122230.0, "series": [{"data": [[1.61617644E12, 65690.0], [1.6161765E12, 122230.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.61617644E12, 42971.5], [1.6161765E12, 113444.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.61617644E12, 60021.25], [1.6161765E12, 122230.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.61617644E12, 52587.5], [1.6161765E12, 115996.44999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.61617644E12, 265.0], [1.6161765E12, 267.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.61617644E12, 374.0], [1.6161765E12, 1133.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6161765E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 278.0, "minX": 1.0, "maxY": 42268.0, "series": [{"data": [[33.0, 372.0], [32.0, 278.0], [2.0, 1121.5], [34.0, 295.5], [36.0, 364.5], [37.0, 384.0], [41.0, 376.5], [44.0, 374.0], [45.0, 374.0], [46.0, 401.5], [47.0, 382.0], [3.0, 1113.5], [60.0, 288.0], [4.0, 1137.5], [74.0, 333.0], [5.0, 1130.0], [6.0, 17621.5], [8.0, 1153.5], [10.0, 321.5], [11.0, 691.5], [12.0, 284.5], [13.0, 1098.0], [14.0, 311.5], [15.0, 409.0], [16.0, 293.0], [1.0, 42268.0], [17.0, 281.0], [18.0, 283.5], [19.0, 790.0], [20.0, 761.0], [21.0, 290.0], [22.0, 358.5], [23.0, 424.0], [24.0, 333.0], [25.0, 380.0], [26.0, 327.0], [28.0, 346.5], [29.0, 287.0], [30.0, 384.5], [31.0, 391.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 74.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 278.0, "minX": 1.0, "maxY": 33671.0, "series": [{"data": [[33.0, 372.0], [32.0, 278.0], [2.0, 1121.5], [34.0, 295.5], [36.0, 364.5], [37.0, 384.0], [41.0, 376.5], [44.0, 374.0], [45.0, 374.0], [46.0, 401.5], [47.0, 382.0], [3.0, 1113.5], [60.0, 288.0], [4.0, 1137.5], [74.0, 333.0], [5.0, 1130.0], [6.0, 3301.5], [8.0, 1153.5], [10.0, 321.5], [11.0, 691.5], [12.0, 284.0], [13.0, 1098.0], [14.0, 311.5], [15.0, 409.0], [16.0, 293.0], [1.0, 33671.0], [17.0, 281.0], [18.0, 283.0], [19.0, 790.0], [20.0, 761.0], [21.0, 290.0], [22.0, 358.5], [23.0, 424.0], [24.0, 333.0], [25.0, 380.0], [26.0, 326.5], [28.0, 346.5], [29.0, 287.0], [30.0, 384.5], [31.0, 391.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 74.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.05, "minX": 1.61617638E12, "maxY": 15.616666666666667, "series": [{"data": [[1.61617644E12, 15.616666666666667], [1.61617638E12, 8.333333333333334], [1.6161765E12, 1.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6161765E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.6, "minX": 1.61617644E12, "maxY": 23.4, "series": [{"data": [[1.61617644E12, 23.4], [1.6161765E12, 1.6]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6161765E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.61617644E12, "maxY": 7.833333333333333, "series": [{"data": [[1.61617644E12, 7.783333333333333], [1.6161765E12, 0.55]], "isOverall": false, "label": "Currency-success", "isController": false}, {"data": [[1.61617644E12, 7.833333333333333], [1.6161765E12, 0.5]], "isOverall": false, "label": "Region-success", "isController": false}, {"data": [[1.61617644E12, 7.783333333333333], [1.6161765E12, 0.55]], "isOverall": false, "label": "Calling Code-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6161765E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.6, "minX": 1.61617644E12, "maxY": 23.4, "series": [{"data": [[1.61617644E12, 23.4], [1.6161765E12, 1.6]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6161765E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

